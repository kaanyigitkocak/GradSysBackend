// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20250519164731_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseCode");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseName");

                    b.Property<int>("CourseType")
                        .HasColumnType("integer")
                        .HasColumnName("CourseType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<int>("Ects")
                        .HasColumnType("integer")
                        .HasColumnName("Ects");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000001"),
                            CourseCode = "MATH 141",
                            CourseName = "Calculus I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4720),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000002"),
                            CourseCode = "PHYS 121",
                            CourseName = "Physics I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000012"),
                            Ects = 7
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000003"),
                            CourseCode = "CENG 111",
                            CourseName = "Introduction to Computer Engineering",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000004"),
                            CourseCode = "CENG 113",
                            CourseName = "Introduction to Programming",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000005"),
                            CourseCode = "CENG 115",
                            CourseName = "Discrete Structures",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000006"),
                            CourseCode = "ENG 101",
                            CourseName = "Academic English I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000019"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000007"),
                            CourseCode = "MATH 142",
                            CourseName = "Calculus II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000008"),
                            CourseCode = "PHYS 122",
                            CourseName = "Physics II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000012"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000009"),
                            CourseCode = "MATH 144",
                            CourseName = "Finite Mathematics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000010"),
                            CourseCode = "CENG 112",
                            CourseName = "Data Structures",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000011"),
                            CourseCode = "ECON 106",
                            CourseName = "Principles of Economics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000012"),
                            CourseCode = "ENG 102",
                            CourseName = "Academic English II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000019"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000013"),
                            CourseCode = "GCC 101",
                            CourseName = "Career Planning and Development",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 0
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000014"),
                            CourseCode = "CENG 211",
                            CourseName = "Fundamentals of Programming",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000015"),
                            CourseCode = "CENG 213",
                            CourseName = "Theory of Computation",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000016"),
                            CourseCode = "CENG 215",
                            CourseName = "Circuits and Electronics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000017"),
                            CourseCode = "MATH 255",
                            CourseName = "Differential Equations",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000018"),
                            CourseCode = "HIST 201",
                            CourseName = "History of Turkish Republic I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000019"),
                            CourseCode = "TURK 201",
                            CourseName = "Turkish Language I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000020"),
                            CourseCode = "HIST 203",
                            CourseName = "History of Turkish Revolution I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000021"),
                            CourseCode = "TURK 203",
                            CourseName = "Turkish for International Students I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000022"),
                            CourseCode = "CENG 212",
                            CourseName = "Programming Language Concepts",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000023"),
                            CourseCode = "CENG 214",
                            CourseName = "Logic Design",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000024"),
                            CourseCode = "CENG 216",
                            CourseName = "Numerical Computing",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000025"),
                            CourseCode = "CENG 218",
                            CourseName = "Analysis and Design of Algorithms",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000026"),
                            CourseCode = "CENG 222",
                            CourseName = "Probability and Statistics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000027"),
                            CourseCode = "HIST 202",
                            CourseName = "History of Turkish Republic II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000028"),
                            CourseCode = "TURK 202",
                            CourseName = "Turkish Language II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000029"),
                            CourseCode = "HIST 204",
                            CourseName = "History of Turkish Revolution II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000030"),
                            CourseCode = "TURK 204",
                            CourseName = "Turkish for International Students II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4800),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000031"),
                            CourseCode = "CENG 311",
                            CourseName = "Computer Architecture",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4800),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000032"),
                            CourseCode = "CENG 315",
                            CourseName = "Information Management",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000033"),
                            CourseCode = "CENG 312",
                            CourseName = "Computer Networks",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000034"),
                            CourseCode = "CENG 316",
                            CourseName = "Software Engineering",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000035"),
                            CourseCode = "CENG 318",
                            CourseName = "Human-Computer Interaction",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000036"),
                            CourseCode = "CENG 322",
                            CourseName = "Operating Systems",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000037"),
                            CourseCode = "CENG 411",
                            CourseName = "Professionalism in Computer Engineering",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000038"),
                            CourseCode = "CENG 415",
                            CourseName = "Undergraduate Thesis and Seminar I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000039"),
                            CourseCode = "CENG 416",
                            CourseName = "Undergraduate Thesis and Seminar II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000040"),
                            CourseCode = "CENG 370",
                            CourseName = "Mainframe Computers",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000041"),
                            CourseCode = "CENG 381",
                            CourseName = "Stochastic Processes",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000042"),
                            CourseCode = "CENG 382",
                            CourseName = "Information Theory",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000043"),
                            CourseCode = "CENG 383",
                            CourseName = "Real-Time Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000044"),
                            CourseCode = "CENG 384",
                            CourseName = "Microprocessors",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000045"),
                            CourseCode = "CENG 385",
                            CourseName = "Mathematical Logic",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000046"),
                            CourseCode = "CENG 386",
                            CourseName = "Fuzzy Logic Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000047"),
                            CourseCode = "CENG 388",
                            CourseName = "Web Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000048"),
                            CourseCode = "CENG 389",
                            CourseName = "Mobile Application Development",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4850),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000049"),
                            CourseCode = "CENG 390",
                            CourseName = "Cloud Computing",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4850),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000050"),
                            CourseCode = "CENG 391",
                            CourseName = "Introduction to Image Understanding",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4850),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000051"),
                            CourseCode = "CENG 421",
                            CourseName = "Computer Network Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4850),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000052"),
                            CourseCode = "CENG 422",
                            CourseName = "Computer Network Design and Management",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4860),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000053"),
                            CourseCode = "CENG 431",
                            CourseName = "Software Systems Development",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4860),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000054"),
                            CourseCode = "CENG 432",
                            CourseName = "Fundamentals of Enterprise Application Development",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4860),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000055"),
                            CourseCode = "CENG 433",
                            CourseName = "Scalable Software Development for the Internet",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4870),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000056"),
                            CourseCode = "CENG 434",
                            CourseName = "Enterprise Application Integrations",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4870),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000057"),
                            CourseCode = "CENG 435",
                            CourseName = "Database Management System Design and Implementation",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4870),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000058"),
                            CourseCode = "CENG 436",
                            CourseName = "Distributed Information Management",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4870),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000059"),
                            CourseCode = "CENG 437",
                            CourseName = "Software Quality Management",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4870),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000060"),
                            CourseCode = "CENG 441",
                            CourseName = "Introduction to Parallel Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4880),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000061"),
                            CourseCode = "CENG 442",
                            CourseName = "Multi-Core Architectures and Operating Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4880),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000062"),
                            CourseCode = "CENG 443",
                            CourseName = "Heterogeneous Parallel Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4890),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000063"),
                            CourseCode = "CENG 444",
                            CourseName = "Parallel Programming Patterns",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4890),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000064"),
                            CourseCode = "CENG 451",
                            CourseName = "Advanced Digital System Design",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4890),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000065"),
                            CourseCode = "CENG 452",
                            CourseName = "Software Development for Embedded Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4890),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000066"),
                            CourseCode = "CENG 461",
                            CourseName = "Artificial Intelligence",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4900),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000067"),
                            CourseCode = "CENG 462",
                            CourseName = "Soft Computing",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4900),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000068"),
                            CourseCode = "CENG 463",
                            CourseName = "Introduction to Machine Learning",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4900),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000069"),
                            CourseCode = "CENG 464",
                            CourseName = "Text Mining",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4900),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000070"),
                            CourseCode = "CENG 465",
                            CourseName = "Principles of Data-Intensive Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4900),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000071"),
                            CourseCode = "CENG 471",
                            CourseName = "Cryptography",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4910),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000072"),
                            CourseCode = "CENG 472",
                            CourseName = "Computer Network Security",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4910),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000073"),
                            CourseCode = "CENG 473",
                            CourseName = "Information and Communication Technologies Security",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4910),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000074"),
                            CourseCode = "CENG 481",
                            CourseName = "Theoretical Approaches in Computer Science",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4910),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000075"),
                            CourseCode = "CENG 482",
                            CourseName = "Evolutionary Computation",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4920),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000076"),
                            CourseCode = "CENG 483",
                            CourseName = "Behavioral Robotics",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4920),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000077"),
                            CourseCode = "CENG 484",
                            CourseName = "Data Mining",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4920),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000078"),
                            CourseCode = "CENG 485",
                            CourseName = "Entrepreneurship in Information Technologies",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4920),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000079"),
                            CourseCode = "CENG 486",
                            CourseName = "Entrepreneurship for Smart Businesses",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4930),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000080"),
                            CourseCode = "CENG 487",
                            CourseName = "Introduction to Computer Graphics",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4930),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000081"),
                            CourseCode = "CENG 488",
                            CourseName = "Computer Graphics",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4930),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000082"),
                            CourseCode = "ART 201",
                            CourseName = "Drawing-Sketch",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4930),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000083"),
                            CourseCode = "ART 202",
                            CourseName = "Painting",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4940),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000084"),
                            CourseCode = "ART 203",
                            CourseName = "Sculpture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4940),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000085"),
                            CourseCode = "ART 204",
                            CourseName = "Artistic Ceramics",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4940),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000086"),
                            CourseCode = "ART 205",
                            CourseName = "Color Photography",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4940),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000087"),
                            CourseCode = "ART 206",
                            CourseName = "Introduction to Sound Production and Design",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4950),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000088"),
                            CourseCode = "ART 210",
                            CourseName = "Western Music and Aesthetics",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4950),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000089"),
                            CourseCode = "ART 211",
                            CourseName = "Music Workshop",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4950),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000090"),
                            CourseCode = "ART 212",
                            CourseName = "Introduction to Harmony",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4950),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000091"),
                            CourseCode = "ART 230",
                            CourseName = "Dance Education",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4960),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000092"),
                            CourseCode = "ART 231",
                            CourseName = "Traditional Folk Dances I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4960),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000093"),
                            CourseCode = "ART 232",
                            CourseName = "Traditional Folk Dances II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4960),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000094"),
                            CourseCode = "CHN 201",
                            CourseName = "Basic Chinese I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4970),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000095"),
                            CourseCode = "FREN 201",
                            CourseName = "Basic French I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4970),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000096"),
                            CourseCode = "FREN 202",
                            CourseName = "Basic French II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4970),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000097"),
                            CourseCode = "FREN 203",
                            CourseName = "Intermediate French I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4970),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000098"),
                            CourseCode = "GER 201",
                            CourseName = "Basic German I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4980),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000099"),
                            CourseCode = "GER 202",
                            CourseName = "Basic German II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4980),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000100"),
                            CourseCode = "GER 203",
                            CourseName = "Intermediate German I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4980),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000101"),
                            CourseCode = "GER 204",
                            CourseName = "Intermediate German II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4980),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000102"),
                            CourseCode = "HUM 203",
                            CourseName = "Introduction to Social Anthropology",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4990),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000103"),
                            CourseCode = "HUM 205",
                            CourseName = "Current Issues in Turkish Language",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4990),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000104"),
                            CourseCode = "HUM 206",
                            CourseName = "Comparative Cultures",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4990),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000105"),
                            CourseCode = "HUM 207",
                            CourseName = "Ottoman History I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4990),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000106"),
                            CourseCode = "HUM 208",
                            CourseName = "Ottoman History II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4990),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000107"),
                            CourseCode = "HUM 211",
                            CourseName = "Introduction to Russian Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5000),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000108"),
                            CourseCode = "HUM 213",
                            CourseName = "History of Western Civilizations I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5000),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000109"),
                            CourseCode = "HUM 214",
                            CourseName = "History of Western Civilizations II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5000),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000110"),
                            CourseCode = "HUM 215",
                            CourseName = "Mythology",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5010),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000111"),
                            CourseCode = "HUM 216",
                            CourseName = "Analysis of Folklore Texts",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5010),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000112"),
                            CourseCode = "HUM 217",
                            CourseName = "Art History I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5010),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000113"),
                            CourseCode = "HUM 218",
                            CourseName = "Art History II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5010),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000114"),
                            CourseCode = "HUM 219",
                            CourseName = "Art History III",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5010),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000115"),
                            CourseCode = "HUM 220",
                            CourseName = "Introduction to Japanese Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5020),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000116"),
                            CourseCode = "HUM 223",
                            CourseName = "Introduction to French Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5020),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000117"),
                            CourseCode = "HUM 226",
                            CourseName = "Textual Analysis of Contemporary Turkish Literature",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5020),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000118"),
                            CourseCode = "HUM 227",
                            CourseName = "Turkish Language Reform",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5020),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000119"),
                            CourseCode = "HUM 230",
                            CourseName = "Group Dynamics",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5030),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000120"),
                            CourseCode = "HUM 231",
                            CourseName = "Sociology of Work",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5030),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000121"),
                            CourseCode = "HUM 232",
                            CourseName = "Visual Communication Symbols in Art and Daily Life",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5030),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000122"),
                            CourseCode = "HUM 233",
                            CourseName = "Visual Perception in Art",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5040),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000123"),
                            CourseCode = "HUM 240",
                            CourseName = "Introduction to Spanish Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5040),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000124"),
                            CourseCode = "HUM 251",
                            CourseName = "Ottoman Turkish I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5040),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000125"),
                            CourseCode = "HUM 252",
                            CourseName = "Ottoman Turkish II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5050),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000126"),
                            CourseCode = "HUM 255",
                            CourseName = "Latin I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5050),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000127"),
                            CourseCode = "HUM 256",
                            CourseName = "Latin II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5050),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000128"),
                            CourseCode = "JAP 201",
                            CourseName = "Basic Japanese I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5050),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000129"),
                            CourseCode = "JAP 202",
                            CourseName = "Basic Japanese II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5050),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000130"),
                            CourseCode = "JAP 203",
                            CourseName = "Intermediate Japanese I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5060),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000131"),
                            CourseCode = "MAN 203",
                            CourseName = "Project Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5060),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000132"),
                            CourseCode = "MAN 205",
                            CourseName = "Innovation Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5060),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000133"),
                            CourseCode = "MAN 206",
                            CourseName = "Businesses and Business Life",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5070),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000134"),
                            CourseCode = "MAN 210",
                            CourseName = "Corporate Communication and Management Skills",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5070),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000135"),
                            CourseCode = "MAN 211",
                            CourseName = "Communication and Management Skills for Engineers",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5070),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000136"),
                            CourseCode = "MAN 215",
                            CourseName = "Engineering Economy",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5070),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000137"),
                            CourseCode = "MAN 216",
                            CourseName = "Introduction to Marketing",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5080),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000138"),
                            CourseCode = "MAN 217",
                            CourseName = "Fundamentals of Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5080),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000139"),
                            CourseCode = "MAN 218",
                            CourseName = "Entrepreneurship",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5080),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000140"),
                            CourseCode = "MAN 220",
                            CourseName = "Leadership",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5080),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000141"),
                            CourseCode = "MAN 221",
                            CourseName = "Organizational and Personal Career Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5080),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000142"),
                            CourseCode = "MAN 230",
                            CourseName = "Law in Business Life",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5090),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000143"),
                            CourseCode = "MAN 231",
                            CourseName = "Intellectual and Industrial Property Law",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5090),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000144"),
                            CourseCode = "RUS 201",
                            CourseName = "Basic Russian I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5090),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000145"),
                            CourseCode = "RUS 202",
                            CourseName = "Basic Russian II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5090),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000146"),
                            CourseCode = "RUS 203",
                            CourseName = "Intermediate Russian I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5100),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000147"),
                            CourseCode = "RUS 204",
                            CourseName = "Intermediate Russian II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5100),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000148"),
                            CourseCode = "RUS 205",
                            CourseName = "Advanced Russian I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5100),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000149"),
                            CourseCode = "RUS 206",
                            CourseName = "Advanced Russian II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5100),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000150"),
                            CourseCode = "SPAN 203",
                            CourseName = "Intermediate Spanish I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5100),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000151"),
                            CourseCode = "SPAN 204",
                            CourseName = "Intermediate Spanish II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5110),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000152"),
                            CourseCode = "SPRT 201",
                            CourseName = "Tennis I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5110),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000153"),
                            CourseCode = "SPRT 202",
                            CourseName = "Tennis II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5110),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000154"),
                            CourseCode = "SPRT 203",
                            CourseName = "Badminton",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5110),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000155"),
                            CourseCode = "SPRT 204",
                            CourseName = "Basketball",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5120),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000156"),
                            CourseCode = "SPRT 206",
                            CourseName = "Table Tennis",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5120),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000157"),
                            CourseCode = "SPRT 208",
                            CourseName = "Basic Fitness Techniques",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(5120),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.CourseTaken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CourseCodeInTranscript")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseCodeInTranscript");

                    b.Property<string>("CourseNameInTranscript")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseNameInTranscript");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("CreditsEarned")
                        .HasColumnType("integer")
                        .HasColumnName("CreditsEarned");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Grade");

                    b.Property<bool>("IsSuccessfullyCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSuccessfullyCompleted");

                    b.Property<Guid?>("MatchedCourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("MatchedCourseId");

                    b.Property<string>("SemesterTaken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SemesterTaken");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("MatchedCourseId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("CourseTakens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("FacultyId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4030),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Computer Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4030),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Electrical-Electronics Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4040),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Mechanical Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000004"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4040),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Civil Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000005"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4040),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Environmental Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000006"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4040),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Chemical Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000007"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4040),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Food Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000008"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4040),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Materials Science and Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000009"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4050),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Bioengineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000010"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4050),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Energy Systems Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000011"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4050),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Photonics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000012"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4050),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Physics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000013"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4060),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000014"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4060),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000015"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4060),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Molecular Biology and Genetics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000016"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4060),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Architecture"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000017"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4060),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Urban and Regional Planning"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000018"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4070),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Industrial Design"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000019"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4070),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Name = "Foreign Languages"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000020"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4070),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Name = "General Culture Courses"
                        });
                });

            modelBuilder.Entity("Domain.Entities.EligibilityCheckResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ActualValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ActualValue");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CheckDate");

                    b.Property<int>("CheckType")
                        .HasColumnType("integer")
                        .HasColumnName("CheckType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GraduationProcessId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsMet")
                        .HasColumnType("boolean")
                        .HasColumnName("IsMet");

                    b.Property<string>("NotesOrMissingItems")
                        .HasColumnType("text")
                        .HasColumnName("NotesOrMissingItems");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessId");

                    b.Property<string>("RequiredValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RequiredValue");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GraduationProcessId");

                    b.ToTable("EligibilityCheckResults", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("text")
                        .HasColumnName("ActivationKey");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("IsVerified");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Faculties", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(3970),
                            Name = "Faculty of Engineering"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4000),
                            Name = "Faculty of Science"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4000),
                            Name = "Faculty of Architecture"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000004"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4000),
                            Name = "School of Foreign Languages"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000005"),
                            CreatedDate = new DateTime(2025, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4000),
                            Name = "Faculty of General Studies"
                        });
                });

            modelBuilder.Entity("Domain.Entities.FileAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FileName");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FilePath");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("FileSize");

                    b.Property<int>("FileType")
                        .HasColumnType("integer")
                        .HasColumnName("FileType");

                    b.Property<Guid?>("GraduationProcessId")
                        .HasColumnType("uuid");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MimeType");

                    b.Property<Guid?>("ProcessId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessId");

                    b.Property<int>("StorageType")
                        .HasColumnType("integer")
                        .HasColumnName("StorageType");

                    b.Property<Guid?>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UploadDate");

                    b.Property<Guid>("UploaderUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UploaderUserId");

                    b.HasKey("Id");

                    b.HasIndex("GraduationProcessId");

                    b.HasIndex("StudentUserId");

                    b.HasIndex("UploaderUserId");

                    b.ToTable("FileAttachments", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.GraduationProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AcademicTerm")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("AcademicTerm");

                    b.Property<DateTime?>("AdvisorReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AdvisorReviewDate");

                    b.Property<Guid?>("AdvisorUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("AdvisorUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeansOfficeReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeansOfficeReviewDate");

                    b.Property<Guid?>("DeansOfficeUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeansOfficeUserId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime?>("DeptSecretaryReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeptSecretaryReviewDate");

                    b.Property<Guid?>("DeptSecretaryUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeptSecretaryUserId");

                    b.Property<DateTime>("InitiationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("InitiationDate");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastUpdateDate");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("Notes");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("StudentAffairsReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StudentAffairsReviewDate");

                    b.Property<Guid?>("StudentAffairsUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentAffairsUserId");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorUserId");

                    b.HasIndex("DeansOfficeUserId");

                    b.HasIndex("DeptSecretaryUserId");

                    b.HasIndex("StudentAffairsUserId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("GraduationProcesses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.GraduationRequirementSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<DateTime>("LastModificationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModificationDate");

                    b.Property<Guid>("LastModifiedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifiedByUserId");

                    b.Property<decimal>("MinGpa")
                        .HasColumnType("numeric")
                        .HasColumnName("MinGpa");

                    b.Property<int?>("MinNonTechnicalElectiveCoursesCount")
                        .HasColumnType("integer")
                        .HasColumnName("MinNonTechnicalElectiveCoursesCount");

                    b.Property<int?>("MinTechnicalElectiveCoursesCount")
                        .HasColumnType("integer")
                        .HasColumnName("MinTechnicalElectiveCoursesCount");

                    b.Property<int?>("MinUniversityElectiveCoursesCount")
                        .HasColumnType("integer")
                        .HasColumnName("MinUniversityElectiveCoursesCount");

                    b.Property<int>("TotalMinEcts")
                        .HasColumnType("integer")
                        .HasColumnName("TotalMinEcts");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.HasIndex("LastModifiedByUserId");

                    b.ToTable("GraduationRequirementSets", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MailLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Body");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("ErrorMessage");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("From");

                    b.Property<bool>("IsBodyHtml")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBodyHtml");

                    b.Property<bool>("IsSentSuccessfully")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSentSuccessfully");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SentDate");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Subject");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("To");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("MailLogs", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("IsRead");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Message");

                    b.Property<Guid>("RecipientUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipientUserId");

                    b.Property<Guid?>("RelatedProcessId")
                        .HasColumnType("uuid")
                        .HasColumnName("RelatedProcessId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("RecipientUserId");

                    b.HasIndex("RelatedProcessId");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "SYSTEM_ADMIN"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "STUDENT"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "STUDENT_AFFAIRS_STAFF"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "ADVISOR"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "DEPARTMENT_SECRETARY"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "DEANS_OFFICE_STAFF"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("IsVerified");

                    b.Property<byte[]>("SecretKey")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("SecretKey");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RankingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AcademicTerm")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("AcademicTerm");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GeneratedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("GeneratedByUserId");

                    b.Property<DateTime>("GenerationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("GenerationDate");

                    b.Property<int>("ListType")
                        .HasColumnType("integer")
                        .HasColumnName("ListType");

                    b.Property<decimal?>("MinGpaForInclusion")
                        .HasColumnType("numeric")
                        .HasColumnName("MinGpaForInclusion");

                    b.Property<string>("PrimarySortField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PrimarySortField");

                    b.Property<Guid?>("ScopeDepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("ScopeDepartmentId");

                    b.Property<Guid?>("ScopeFacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("ScopeFacultyId");

                    b.Property<string>("SortOrder")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SortOrder");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GeneratedByUserId");

                    b.HasIndex("ScopeDepartmentId");

                    b.HasIndex("ScopeFacultyId");

                    b.ToTable("RankingLists", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RankingListCriteria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CriteriaName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CriteriaName");

                    b.Property<string>("CriteriaValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CriteriaValue");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("RankingListId")
                        .HasColumnType("uuid")
                        .HasColumnName("RankingListId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("RankingListId");

                    b.ToTable("RankingListCriterias", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RankingListEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<decimal>("GpaAtRanking")
                        .HasColumnType("numeric")
                        .HasColumnName("GpaAtRanking");

                    b.Property<int>("HonourStatus")
                        .HasColumnType("integer")
                        .HasColumnName("HonourStatus");

                    b.Property<int>("Rank")
                        .HasColumnType("integer")
                        .HasColumnName("Rank");

                    b.Property<Guid>("RankingListId")
                        .HasColumnType("uuid")
                        .HasColumnName("RankingListId");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("RankingListId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("RankingListEntries", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CreatedByIp");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpiresDate");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("text")
                        .HasColumnName("ReasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("text")
                        .HasColumnName("ReplacedByToken");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("text")
                        .HasColumnName("RevokedByIp");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RevokedDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Token");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RequirementMandatoryCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GraduationRequirementSetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RequirementSetId")
                        .HasColumnType("uuid")
                        .HasColumnName("RequirementSetId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GraduationRequirementSetId");

                    b.ToTable("RequirementMandatoryCourses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("FacultyId");

                    b.Property<string>("StaffIdentificationNumber")
                        .HasColumnType("text")
                        .HasColumnName("StaffIdentificationNumber");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Staffs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF001",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000042"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000002"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF002",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000043"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF003",
                            Title = "Department Secretary"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000044"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF004",
                            Title = "Dean's Office Staff"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000045"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StaffIdentificationNumber = "STAFF005",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000046"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000012"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StaffIdentificationNumber = "STAFF006",
                            Title = "Academic Staff"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000047"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000016"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StaffIdentificationNumber = "STAFF007",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000048"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000019"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000004"),
                            StaffIdentificationNumber = "STAFF008",
                            Title = "Instructor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000049"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000005"),
                            StaffIdentificationNumber = "STAFF009",
                            Title = "Coordinator"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF010",
                            Title = "Advisor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AssignedAdvisorUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("AssignedAdvisorUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<int?>("CurrentEctsCompleted")
                        .HasColumnType("integer")
                        .HasColumnName("CurrentEctsCompleted");

                    b.Property<decimal?>("CurrentGpa")
                        .HasColumnType("numeric")
                        .HasColumnName("CurrentGpa");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EnrollDate");

                    b.Property<int>("GraduationStatus")
                        .HasColumnType("integer")
                        .HasColumnName("GraduationStatus");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProgramName");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("StudentNumber");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAdvisorUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000001"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 11, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4490),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400001"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000002"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 2, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4500),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400002"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000003"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4510),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400003"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000004"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 7, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4510),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400004"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000005"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 2, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4510),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400005"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000006"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4510),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400006"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000007"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 11, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4510),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400007"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000008"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4520),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400008"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000009"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 10, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4520),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400009"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000010"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 4, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4520),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400010"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000011"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 7, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4520),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400011"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000012"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 7, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4530),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400012"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000013"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4530),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400013"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000014"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4530),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400014"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000015"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 4, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4530),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400015"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000016"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4530),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400016"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000017"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4540),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400017"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000018"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4540),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400018"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000019"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 12, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4540),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400019"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000020"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4540),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400020"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000021"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 12, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4550),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400021"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000022"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 4, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4550),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400022"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000023"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 12, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4550),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400023"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000024"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 10, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4550),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400024"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000025"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 10, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4550),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400025"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000026"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 1, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4560),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400026"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000027"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 3, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4560),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400027"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000028"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 4, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4560),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400028"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000029"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 11, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4560),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400029"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000030"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 9, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4560),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400030"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000031"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 11, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4570),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400031"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000032"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 11, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4570),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400032"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000033"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 1, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4570),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400033"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000034"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 9, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4570),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400034"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000035"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 2, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4570),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400035"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000036"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 12, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4580),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400036"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000037"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 8, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4580),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400037"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000038"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 8, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4580),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400038"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000039"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 12, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4580),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400039"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000040"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 6, 19, 19, 47, 30, 866, DateTimeKind.Utc).AddTicks(4580),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400040"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TranscriptData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsValidForProcessing")
                        .HasColumnType("boolean")
                        .HasColumnName("IsValidForProcessing");

                    b.Property<int>("ParsedEcts")
                        .HasColumnType("integer")
                        .HasColumnName("ParsedEcts");

                    b.Property<decimal>("ParsedGpa")
                        .HasColumnType("numeric")
                        .HasColumnName("ParsedGpa");

                    b.Property<DateTime>("ParsingDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ParsingDate");

                    b.Property<Guid>("SourceFileAttachmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("SourceFileAttachmentId");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SourceFileAttachmentId")
                        .IsUnique();

                    b.HasIndex("StudentUserId");

                    b.ToTable("TranscriptDatas", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("integer")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "systemadmin@university.edu",
                            FirstName = "System",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 113, 202, 15, 151, 31, 243, 89, 79, 69, 250, 196, 254, 240, 8, 166, 217, 224, 123, 170, 26, 170, 6, 220, 235, 189, 73, 191, 124, 243, 25, 43, 148, 178, 46, 180, 87, 11, 182, 215, 100, 166, 78, 213, 218, 144, 148, 249, 145, 43, 160, 246, 235, 53, 2, 253, 202, 52, 229, 86, 85, 189, 218, 118, 6 },
                            PasswordSalt = new byte[] { 23, 29, 117, 225, 167, 176, 239, 243, 54, 114, 183, 107, 126, 0, 177, 211, 62, 40, 50, 107, 181, 225, 124, 190, 3, 197, 104, 225, 164, 233, 110, 242, 103, 6, 91, 185, 99, 226, 152, 143, 38, 91, 106, 31, 69, 153, 11, 159, 76, 225, 149, 8, 48, 39, 132, 15, 250, 202, 236, 37, 216, 67, 156, 181, 24, 86, 147, 18, 102, 239, 216, 16, 213, 32, 110, 91, 98, 235, 119, 47, 56, 6, 175, 255, 101, 99, 124, 85, 15, 157, 101, 77, 175, 17, 245, 175, 217, 215, 77, 93, 144, 208, 241, 166, 198, 163, 63, 108, 212, 40, 177, 185, 242, 116, 47, 45, 176, 215, 202, 238, 191, 128, 1, 150, 9, 111, 54, 90 },
                            PhoneNumber = "1112223344",
                            UserName = "systemadmin"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-22222222222a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "student@std.iyte.edu.tr",
                            FirstName = "Student",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "User",
                            PasswordHash = new byte[] { 164, 216, 172, 206, 120, 91, 32, 66, 31, 19, 162, 6, 214, 127, 95, 220, 200, 74, 209, 52, 173, 61, 145, 207, 60, 236, 251, 246, 169, 42, 119, 91, 52, 9, 111, 236, 150, 115, 203, 184, 190, 0, 172, 30, 159, 184, 107, 53, 19, 110, 249, 44, 87, 106, 40, 168, 160, 65, 176, 83, 120, 83, 156, 192 },
                            PasswordSalt = new byte[] { 136, 116, 243, 65, 190, 108, 191, 197, 94, 2, 140, 245, 69, 58, 179, 30, 63, 133, 164, 98, 222, 171, 6, 186, 61, 221, 134, 241, 164, 75, 35, 110, 22, 125, 203, 43, 51, 22, 254, 221, 9, 157, 2, 15, 166, 235, 18, 219, 35, 77, 160, 132, 65, 155, 196, 66, 145, 218, 251, 50, 28, 3, 215, 160, 166, 236, 55, 178, 121, 166, 191, 138, 65, 221, 183, 9, 17, 40, 163, 174, 180, 43, 43, 114, 247, 2, 155, 58, 202, 201, 99, 120, 101, 104, 22, 175, 11, 117, 30, 113, 131, 149, 219, 140, 120, 141, 142, 10, 178, 144, 40, 134, 20, 153, 144, 211, 56, 16, 51, 62, 188, 78, 216, 175, 189, 208, 114, 81 },
                            PhoneNumber = "2223334455",
                            UserName = "studentuser"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-33333333333a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "studentaffairs@iyte.edu.tr",
                            FirstName = "StudentAffairs",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Staff",
                            PasswordHash = new byte[] { 61, 186, 31, 145, 88, 222, 0, 157, 89, 126, 169, 119, 232, 103, 163, 165, 244, 14, 34, 149, 16, 223, 188, 136, 248, 221, 117, 226, 231, 207, 219, 15, 101, 163, 167, 82, 22, 168, 142, 148, 209, 32, 14, 242, 125, 179, 247, 43, 212, 46, 36, 93, 17, 136, 180, 191, 214, 144, 43, 54, 97, 39, 213, 35 },
                            PasswordSalt = new byte[] { 123, 169, 225, 151, 247, 64, 137, 16, 124, 29, 24, 213, 131, 163, 187, 25, 75, 39, 22, 73, 98, 94, 165, 195, 197, 72, 97, 207, 112, 91, 77, 98, 165, 137, 10, 189, 238, 204, 110, 62, 86, 228, 224, 145, 88, 250, 141, 108, 6, 65, 11, 254, 239, 16, 183, 8, 238, 17, 251, 106, 55, 63, 188, 238, 183, 16, 92, 41, 60, 88, 254, 14, 241, 74, 55, 114, 105, 113, 199, 10, 58, 250, 68, 71, 181, 179, 106, 179, 241, 103, 59, 205, 190, 188, 251, 125, 76, 108, 132, 19, 116, 43, 210, 191, 37, 3, 191, 116, 68, 107, 100, 51, 246, 220, 1, 140, 173, 23, 14, 173, 106, 123, 24, 128, 82, 97, 216, 239 },
                            PhoneNumber = "3334445566",
                            UserName = "studentaffairs"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-44444444444a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "advisor@iyte.edu.tr",
                            FirstName = "Advisor",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "User",
                            PasswordHash = new byte[] { 86, 23, 214, 69, 159, 155, 79, 218, 61, 202, 124, 32, 101, 21, 59, 249, 71, 235, 162, 29, 134, 205, 157, 151, 24, 215, 67, 208, 149, 245, 127, 12, 147, 1, 27, 218, 117, 85, 224, 162, 160, 42, 123, 91, 34, 163, 76, 105, 74, 240, 197, 209, 56, 95, 98, 137, 217, 240, 65, 105, 42, 106, 77, 107 },
                            PasswordSalt = new byte[] { 119, 219, 234, 222, 199, 116, 88, 237, 232, 227, 221, 95, 94, 45, 169, 118, 179, 171, 74, 28, 118, 33, 254, 34, 211, 131, 206, 35, 220, 230, 1, 92, 157, 183, 136, 194, 134, 106, 205, 236, 96, 126, 152, 7, 48, 9, 55, 149, 95, 124, 32, 13, 107, 75, 11, 52, 12, 97, 64, 178, 1, 8, 45, 238, 30, 25, 185, 252, 81, 163, 231, 103, 40, 230, 8, 46, 17, 28, 218, 184, 158, 177, 26, 209, 216, 220, 132, 236, 137, 125, 140, 227, 218, 99, 132, 222, 121, 165, 188, 130, 176, 123, 203, 141, 166, 168, 144, 161, 35, 95, 150, 100, 97, 180, 192, 24, 15, 113, 28, 183, 58, 158, 153, 126, 18, 254, 243, 207 },
                            PhoneNumber = "4445556677",
                            UserName = "advisoruser"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-55555555555a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deptsecretary@iyte.edu.tr",
                            FirstName = "Department",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Secretary",
                            PasswordHash = new byte[] { 213, 17, 119, 212, 22, 232, 128, 83, 161, 47, 72, 235, 148, 47, 143, 201, 47, 43, 24, 190, 183, 47, 242, 172, 159, 16, 203, 146, 116, 164, 80, 239, 21, 1, 101, 81, 65, 105, 120, 79, 127, 10, 199, 7, 7, 164, 23, 76, 216, 85, 70, 47, 139, 180, 190, 115, 51, 174, 162, 132, 127, 248, 69, 180 },
                            PasswordSalt = new byte[] { 126, 250, 143, 208, 163, 177, 56, 82, 10, 125, 194, 236, 51, 245, 49, 182, 76, 58, 28, 2, 68, 21, 178, 211, 170, 205, 247, 163, 164, 164, 116, 68, 83, 121, 187, 174, 75, 139, 212, 190, 248, 212, 172, 231, 115, 182, 150, 226, 240, 224, 26, 198, 157, 117, 97, 196, 157, 127, 50, 144, 192, 250, 96, 140, 197, 105, 129, 173, 192, 42, 121, 111, 176, 7, 145, 27, 170, 48, 169, 38, 50, 78, 102, 237, 82, 196, 206, 53, 67, 20, 106, 228, 167, 184, 10, 21, 105, 125, 250, 72, 63, 213, 239, 6, 133, 231, 239, 141, 78, 134, 121, 63, 33, 209, 95, 129, 62, 216, 93, 155, 87, 164, 71, 109, 101, 25, 225, 235 },
                            PhoneNumber = "5556667788",
                            UserName = "deptsecretary"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-66666666666a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deansoffice@iyte.edu.tr",
                            FirstName = "DeansOffice",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Staff",
                            PasswordHash = new byte[] { 119, 50, 205, 132, 162, 134, 164, 96, 24, 158, 221, 130, 250, 242, 243, 105, 226, 86, 122, 13, 243, 250, 223, 182, 227, 136, 170, 9, 43, 60, 27, 146, 184, 151, 168, 149, 29, 133, 245, 153, 213, 126, 176, 64, 4, 254, 152, 16, 153, 150, 162, 81, 51, 175, 56, 15, 199, 232, 185, 232, 91, 165, 254, 80 },
                            PasswordSalt = new byte[] { 114, 11, 167, 235, 171, 40, 191, 118, 52, 148, 178, 186, 160, 217, 83, 187, 180, 252, 202, 32, 222, 146, 156, 197, 187, 150, 99, 48, 53, 197, 52, 106, 247, 156, 158, 208, 51, 19, 219, 33, 100, 158, 75, 49, 61, 197, 200, 149, 100, 97, 172, 170, 203, 165, 122, 128, 100, 179, 100, 174, 186, 25, 142, 168, 138, 96, 133, 195, 91, 137, 0, 94, 216, 21, 26, 184, 232, 58, 12, 44, 88, 187, 189, 172, 241, 101, 14, 91, 250, 212, 88, 150, 63, 244, 231, 85, 7, 31, 218, 195, 250, 154, 74, 112, 162, 174, 166, 45, 93, 182, 164, 33, 52, 106, 29, 225, 236, 142, 250, 17, 130, 184, 137, 196, 19, 111, 6, 147 },
                            PhoneNumber = "6667778899",
                            UserName = "deansoffice"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000001"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deniz.yilmaz.s1@std.iyte.edu.tr",
                            FirstName = "Deniz",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "deniz.yilmaz.s1"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000002"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.kaya.s2@std.iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "veli.kaya.s2"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000003"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deniz.kaya.s3@std.iyte.edu.tr",
                            FirstName = "Deniz",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "deniz.kaya.s3"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000004"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.aydin.s4@std.iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mehmet.aydin.s4"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000005"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.dogan.s5@std.iyte.edu.tr",
                            FirstName = "Ayşe",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ayse.dogan.s5"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000006"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.celik.s6@std.iyte.edu.tr",
                            FirstName = "Murat",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "murat.celik.s6"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000007"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.yilmaz.s7@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "hatice.yilmaz.s7"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000008"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.celik.s8@std.iyte.edu.tr",
                            FirstName = "Murat",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "murat.celik.s8"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000009"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.kaya.s9@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "hatice.kaya.s9"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000010"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.dogan.s10@std.iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "veli.dogan.s10"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000011"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.demir.s11@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "hatice.demir.s11"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000012"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mustafa.arslan.s12@std.iyte.edu.tr",
                            FirstName = "Mustafa",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mustafa.arslan.s12"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000013"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.sahin.s13@std.iyte.edu.tr",
                            FirstName = "Fatma",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "fatma.sahin.s13"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000014"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.demir.s14@std.iyte.edu.tr",
                            FirstName = "Hüseyin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "huseyin.demir.s14"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000015"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.demir.s15@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "hatice.demir.s15"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000016"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.demir.s16@std.iyte.edu.tr",
                            FirstName = "Murat",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "murat.demir.s16"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000017"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.celik.s17@std.iyte.edu.tr",
                            FirstName = "Ayşe",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ayse.celik.s17"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000018"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.celik.s18@std.iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ali.celik.s18"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000019"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.dogan.s19@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "hatice.dogan.s19"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000020"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.sahin.s20@std.iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "veli.sahin.s20"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000021"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ebru.dogan.s21@std.iyte.edu.tr",
                            FirstName = "Ebru",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ebru.dogan.s21"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000022"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.kaya.s22@std.iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mehmet.kaya.s22"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000023"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.yilmaz.s23@std.iyte.edu.tr",
                            FirstName = "Fatma",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "fatma.yilmaz.s23"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000024"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.dogan.s24@std.iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mehmet.dogan.s24"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000025"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.dogan.s25@std.iyte.edu.tr",
                            FirstName = "Fatma",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "fatma.dogan.s25"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000026"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emre.dogan.s26@std.iyte.edu.tr",
                            FirstName = "Emre",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "emre.dogan.s26"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000027"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ebru.arslan.s27@std.iyte.edu.tr",
                            FirstName = "Ebru",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ebru.arslan.s27"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000028"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mustafa.ozturk.s28@std.iyte.edu.tr",
                            FirstName = "Mustafa",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mustafa.ozturk.s28"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000029"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.sahin.s29@std.iyte.edu.tr",
                            FirstName = "Ayşe",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ayse.sahin.s29"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000030"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.aydin.s30@std.iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "veli.aydin.s30"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000031"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ebru.yildiz.s31@std.iyte.edu.tr",
                            FirstName = "Ebru",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ebru.yildiz.s31"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000032"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.celik.s32@std.iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ali.celik.s32"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000033"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "selin.celik.s33@std.iyte.edu.tr",
                            FirstName = "Selin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "selin.celik.s33"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000034"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "burak.aydin.s34@std.iyte.edu.tr",
                            FirstName = "Burak",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "burak.aydin.s34"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000035"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ebru.demir.s35@std.iyte.edu.tr",
                            FirstName = "Ebru",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ebru.demir.s35"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000036"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.demir.s36@std.iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mehmet.demir.s36"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000037"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ebru.arslan.s37@std.iyte.edu.tr",
                            FirstName = "Ebru",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ebru.arslan.s37"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000038"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.celik.s38@std.iyte.edu.tr",
                            FirstName = "Murat",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "murat.celik.s38"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000039"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.yilmaz.s39@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "hatice.yilmaz.s39"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000040"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emre.aydin.s40@std.iyte.edu.tr",
                            FirstName = "Emre",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "emre.aydin.s40"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000041"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.yilmaz.p1@iyte.edu.tr",
                            FirstName = "Ayşe",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ayse.yilmaz.p1"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000042"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.kaya.p2@iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mehmet.kaya.p2"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000043"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "zeynep.demir.p3@iyte.edu.tr",
                            FirstName = "Zeynep",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "zeynep.demir.p3"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000044"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ahmet.celik.p4@iyte.edu.tr",
                            FirstName = "Ahmet",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ahmet.celik.p4"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000045"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mustafa.sahin.p5@iyte.edu.tr",
                            FirstName = "Mustafa",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "mustafa.sahin.p5"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000046"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.ozturk.p6@iyte.edu.tr",
                            FirstName = "Fatma",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "fatma.ozturk.p6"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000047"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.yildiz.p7@iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "ali.yildiz.p7"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000048"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.aydin.p8@iyte.edu.tr",
                            FirstName = "Hüseyin",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "huseyin.aydin.p8"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000049"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "elif.arslan.p9@iyte.edu.tr",
                            FirstName = "Elif",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "elif.arslan.p9"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000050"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.dogan.p10@iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 19, 100, 165, 111, 220, 36, 94, 66, 5, 105, 212, 218, 227, 91, 135, 72, 43, 164, 184, 22, 248, 153, 15, 94, 95, 169, 168, 102, 94, 196, 192, 118, 181, 53, 132, 192, 81, 67, 44, 241, 164, 78, 5, 214, 128, 66, 216, 198, 205, 122, 230, 216, 51, 59, 135, 30, 37, 179, 28, 121, 110, 48, 100, 38, 133, 58, 8, 86, 236, 152, 135, 173, 196, 18, 31, 138, 63, 186, 202, 255, 134, 88, 162, 15, 58, 114, 6, 182, 99, 105, 214, 53, 243, 5, 171, 183, 100, 175, 246, 75, 225, 177, 79, 186, 46, 227, 204, 12, 2, 90, 187, 102, 169, 71, 243, 58, 95, 60, 238, 142, 86, 37, 111, 60, 58, 185, 187, 59 },
                            PasswordSalt = new byte[] { 191, 43, 168, 94, 128, 229, 69, 68, 238, 123, 49, 148, 143, 36, 144, 185, 29, 132, 244, 124, 122, 237, 152, 85, 161, 207, 40, 97, 13, 116, 3, 31, 14, 10, 78, 156, 207, 70, 60, 66, 50, 46, 37, 255, 213, 191, 218, 93, 99, 65, 172, 80, 44, 158, 196, 207, 234, 156, 183, 106, 154, 235, 34, 130 },
                            UserName = "veli.dogan.p10"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OperationClaimId")
                        .HasColumnType("uuid")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000001"),
                            UserId = new Guid("11111111-1111-1111-1111-11111111111a")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("22222222-2222-2222-2222-22222222222a")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("33333333-3333-3333-3333-33333333333a")
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("44444444-4444-4444-4444-44444444444a")
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000005"),
                            UserId = new Guid("55555555-5555-5555-5555-55555555555a")
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000006"),
                            UserId = new Guid("66666666-6666-6666-6666-66666666666a")
                        },
                        new
                        {
                            Id = new Guid("a5b4d40c-5b2b-467a-a335-edf2999443fe"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2680),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("e8a8bb91-eb00-4728-8609-b964ab9cb0d9"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2690),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("c200d32b-1165-4a34-88c8-7ee20eecacdd"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2690),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("2e202f4e-791a-49a7-a3a1-951abebedde3"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2690),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("f66ea9c5-cc96-42e7-b97e-2e622d2a7bbd"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2700),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("d4e8f068-0a9c-4e92-b993-1eb36d52d77c"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2700),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("2b9c988e-a180-4b9a-8257-17745101ff22"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2710),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            Id = new Guid("866ac58f-40c4-4d97-a24f-4be73803d792"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2710),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            Id = new Guid("a70d3679-533d-4ec7-9755-e62f466ca777"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2710),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            Id = new Guid("14ddcbde-efbc-4484-8a53-da0ac6de7382"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2720),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            Id = new Guid("9540d197-59ef-4fe7-9e03-56e0d0b75868"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2720),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("b394b56f-9c21-4b18-845f-7692163fa8c8"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2720),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000012")
                        },
                        new
                        {
                            Id = new Guid("315e8219-1bea-4d4e-957f-ff8feb4207af"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2730),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000013")
                        },
                        new
                        {
                            Id = new Guid("657f8cd5-0101-44f1-a431-4ad82c7be4d5"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2730),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000014")
                        },
                        new
                        {
                            Id = new Guid("ccd1833b-70eb-4811-8d83-5de1179c9090"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2740),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000015")
                        },
                        new
                        {
                            Id = new Guid("22138332-8af8-4f2a-921b-08d7b6e08276"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2740),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000016")
                        },
                        new
                        {
                            Id = new Guid("f749eb0a-d870-4637-83e7-c137f77f9be3"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2740),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000017")
                        },
                        new
                        {
                            Id = new Guid("eb200b6e-8ded-4632-9946-4d6b650c11d1"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2750),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000018")
                        },
                        new
                        {
                            Id = new Guid("0d538fe7-2138-41c8-ac0f-cafeac2b457a"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2750),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000019")
                        },
                        new
                        {
                            Id = new Guid("8729e819-bdff-44ea-8a7d-c97bfe70ce44"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2750),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000020")
                        },
                        new
                        {
                            Id = new Guid("8a30d6fe-7684-42d3-b6bb-5b72be60c20f"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2760),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000021")
                        },
                        new
                        {
                            Id = new Guid("c42fc6f9-deff-4fd7-80c0-e3e0790b41cd"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2760),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000022")
                        },
                        new
                        {
                            Id = new Guid("8640fae5-ec8c-4099-934e-2aab5a0da027"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2770),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000023")
                        },
                        new
                        {
                            Id = new Guid("394f81e4-fa7c-42f6-b794-a9dbbbf84773"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2770),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000024")
                        },
                        new
                        {
                            Id = new Guid("9f112cfe-183a-4450-b818-a8204a709424"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2770),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000025")
                        },
                        new
                        {
                            Id = new Guid("f43b6f6f-8e0f-4560-b89b-209803e15725"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2780),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000026")
                        },
                        new
                        {
                            Id = new Guid("c379c319-a5f5-46c7-b1e3-9d2105c3a755"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2780),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000027")
                        },
                        new
                        {
                            Id = new Guid("362f230a-140c-40f2-b70a-471c5832f6a0"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2780),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000028")
                        },
                        new
                        {
                            Id = new Guid("3fbb46cf-503e-4118-8a3b-18dc728662a5"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2790),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000029")
                        },
                        new
                        {
                            Id = new Guid("83183995-9ed2-45da-ac4e-70dbf1464c09"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2800),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000030")
                        },
                        new
                        {
                            Id = new Guid("cba642e5-5f07-46d9-954b-436b934ea7d5"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2800),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000031")
                        },
                        new
                        {
                            Id = new Guid("207a6718-42b2-49be-b077-e7f13654a2e0"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2800),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000032")
                        },
                        new
                        {
                            Id = new Guid("a79249e2-a2de-4e29-aebe-058002bd2827"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2810),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000033")
                        },
                        new
                        {
                            Id = new Guid("5d5815a7-e868-463d-b8cc-fb761617e172"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2810),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000034")
                        },
                        new
                        {
                            Id = new Guid("fbb112ef-3787-4572-b222-b0aa25d3e33b"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2810),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000035")
                        },
                        new
                        {
                            Id = new Guid("3a5fb049-9b84-4c8a-9e42-f012b2780515"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2820),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000036")
                        },
                        new
                        {
                            Id = new Guid("a363217d-5606-4456-9abd-de9696de7ed2"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2820),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000037")
                        },
                        new
                        {
                            Id = new Guid("9e912019-841f-4607-a381-3069a8eb0cd2"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2820),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000038")
                        },
                        new
                        {
                            Id = new Guid("00a8e380-0784-4161-9c6b-c7f4bf2b5812"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2830),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000039")
                        },
                        new
                        {
                            Id = new Guid("7f5dffd6-8240-453c-a0a6-97f92e200a4f"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2830),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000040")
                        },
                        new
                        {
                            Id = new Guid("161b3248-5457-4a65-bdd6-a4c73d84ed24"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2840),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000041")
                        },
                        new
                        {
                            Id = new Guid("bf897ac2-5ecd-48c9-8ab7-b9aec7bb0640"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2840),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000042")
                        },
                        new
                        {
                            Id = new Guid("d6214e85-39b5-4e49-a1d1-f110ade0413b"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2840),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000005"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000043")
                        },
                        new
                        {
                            Id = new Guid("ca8d4a29-a9a0-4cb2-bb3f-1eb260978c7b"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2850),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000006"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000044")
                        },
                        new
                        {
                            Id = new Guid("561eae80-a1dd-40a1-b653-564794706097"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2850),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000045")
                        },
                        new
                        {
                            Id = new Guid("83f6e832-95d9-4829-91f3-6db15b924e4e"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2850),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000046")
                        },
                        new
                        {
                            Id = new Guid("5ae8e903-b9d6-4dc6-9ac2-c61e8d678c97"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2860),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000047")
                        },
                        new
                        {
                            Id = new Guid("3d12c4d2-0624-4694-92bc-65df6bba9a8a"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2860),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000048")
                        },
                        new
                        {
                            Id = new Guid("6e2173f7-e1c5-4047-b181-585fe9ede51b"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2860),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000049")
                        },
                        new
                        {
                            Id = new Guid("aca7b8f7-260e-49c5-a889-d9a16e44a7e6"),
                            CreatedDate = new DateTime(2025, 5, 19, 16, 47, 30, 866, DateTimeKind.Utc).AddTicks(2870),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000050")
                        });
                });

            modelBuilder.Entity("Domain.Entities.ValidationCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpireDate");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("IsUsed");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.Property<int>("ValidationType")
                        .HasColumnType("integer")
                        .HasColumnName("ValidationType");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ValidationCodes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.CourseTaken", b =>
                {
                    b.HasOne("Domain.Entities.Course", "MatchedCourse")
                        .WithMany("CourseTakens")
                        .HasForeignKey("MatchedCourseId");

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatchedCourse");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.HasOne("Domain.Entities.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Domain.Entities.EligibilityCheckResult", b =>
                {
                    b.HasOne("Domain.Entities.GraduationProcess", "GraduationProcess")
                        .WithMany("EligibilityCheckResults")
                        .HasForeignKey("GraduationProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GraduationProcess");
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.FileAttachment", b =>
                {
                    b.HasOne("Domain.Entities.GraduationProcess", "GraduationProcess")
                        .WithMany("FileAttachments")
                        .HasForeignKey("GraduationProcessId");

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.HasOne("Domain.Entities.User", "UploaderUser")
                        .WithMany()
                        .HasForeignKey("UploaderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GraduationProcess");

                    b.Navigation("StudentUser");

                    b.Navigation("UploaderUser");
                });

            modelBuilder.Entity("Domain.Entities.GraduationProcess", b =>
                {
                    b.HasOne("Domain.Entities.User", "AdvisorUser")
                        .WithMany()
                        .HasForeignKey("AdvisorUserId");

                    b.HasOne("Domain.Entities.User", "DeansOfficeUser")
                        .WithMany()
                        .HasForeignKey("DeansOfficeUserId");

                    b.HasOne("Domain.Entities.User", "DeptSecretaryUser")
                        .WithMany()
                        .HasForeignKey("DeptSecretaryUserId");

                    b.HasOne("Domain.Entities.User", "StudentAffairsUser")
                        .WithMany()
                        .HasForeignKey("StudentAffairsUserId");

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvisorUser");

                    b.Navigation("DeansOfficeUser");

                    b.Navigation("DeptSecretaryUser");

                    b.Navigation("StudentAffairsUser");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.GraduationRequirementSet", b =>
                {
                    b.HasOne("Domain.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithOne("GraduationRequirementSet")
                        .HasForeignKey("Domain.Entities.GraduationRequirementSet", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Department");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.HasOne("Domain.Entities.User", "RecipientUser")
                        .WithMany()
                        .HasForeignKey("RecipientUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GraduationProcess", "RelatedProcess")
                        .WithMany("Notifications")
                        .HasForeignKey("RelatedProcessId");

                    b.Navigation("RecipientUser");

                    b.Navigation("RelatedProcess");
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RankingList", b =>
                {
                    b.HasOne("Domain.Entities.User", "GeneratedByUser")
                        .WithMany()
                        .HasForeignKey("GeneratedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Department", "ScopeDepartment")
                        .WithMany()
                        .HasForeignKey("ScopeDepartmentId");

                    b.HasOne("Domain.Entities.Faculty", "ScopeFaculty")
                        .WithMany()
                        .HasForeignKey("ScopeFacultyId");

                    b.Navigation("GeneratedByUser");

                    b.Navigation("ScopeDepartment");

                    b.Navigation("ScopeFaculty");
                });

            modelBuilder.Entity("Domain.Entities.RankingListCriteria", b =>
                {
                    b.HasOne("Domain.Entities.RankingList", "RankingList")
                        .WithMany("Criteria")
                        .HasForeignKey("RankingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RankingList");
                });

            modelBuilder.Entity("Domain.Entities.RankingListEntry", b =>
                {
                    b.HasOne("Domain.Entities.RankingList", "RankingList")
                        .WithMany("Entries")
                        .HasForeignKey("RankingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RankingList");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RequirementMandatoryCourse", b =>
                {
                    b.HasOne("Domain.Entities.Course", "Course")
                        .WithMany("RequirementMandatoryCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GraduationRequirementSet", "GraduationRequirementSet")
                        .WithMany("MandatoryCourses")
                        .HasForeignKey("GraduationRequirementSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("GraduationRequirementSet");
                });

            modelBuilder.Entity("Domain.Entities.Staff", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("StaffMembers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Domain.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("StaffProfile")
                        .HasForeignKey("Domain.Entities.Staff", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Faculty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.HasOne("Domain.Entities.User", "AssignedAdvisor")
                        .WithMany()
                        .HasForeignKey("AssignedAdvisorUserId");

                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("StudentProfile")
                        .HasForeignKey("Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedAdvisor");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.TranscriptData", b =>
                {
                    b.HasOne("Domain.Entities.FileAttachment", "SourceFileAttachment")
                        .WithOne("TranscriptData")
                        .HasForeignKey("Domain.Entities.TranscriptData", "SourceFileAttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SourceFileAttachment");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.ValidationCode", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Navigation("CourseTakens");

                    b.Navigation("RequirementMandatoryCourses");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Navigation("GraduationRequirementSet");

                    b.Navigation("StaffMembers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Domain.Entities.Faculty", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Domain.Entities.FileAttachment", b =>
                {
                    b.Navigation("TranscriptData");
                });

            modelBuilder.Entity("Domain.Entities.GraduationProcess", b =>
                {
                    b.Navigation("EligibilityCheckResults");

                    b.Navigation("FileAttachments");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.GraduationRequirementSet", b =>
                {
                    b.Navigation("MandatoryCourses");
                });

            modelBuilder.Entity("Domain.Entities.RankingList", b =>
                {
                    b.Navigation("Criteria");

                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("StaffProfile");

                    b.Navigation("StudentProfile");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
