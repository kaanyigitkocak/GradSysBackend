// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseCode");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseName");

                    b.Property<int>("CourseType")
                        .HasColumnType("integer")
                        .HasColumnName("CourseType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<int>("Ects")
                        .HasColumnType("integer")
                        .HasColumnName("Ects");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000001"),
                            CourseCode = "MATH 141",
                            CourseName = "Calculus I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3380),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000002"),
                            CourseCode = "PHYS 121",
                            CourseName = "Physics I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3390),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000012"),
                            Ects = 7
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000003"),
                            CourseCode = "CENG 111",
                            CourseName = "Introduction to Computer Engineering",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3390),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000004"),
                            CourseCode = "CENG 113",
                            CourseName = "Introduction to Programming",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3390),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000005"),
                            CourseCode = "CENG 115",
                            CourseName = "Discrete Structures",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3400),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000006"),
                            CourseCode = "ENG 101",
                            CourseName = "Academic English I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3400),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000019"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000007"),
                            CourseCode = "MATH 142",
                            CourseName = "Calculus II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3400),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000008"),
                            CourseCode = "PHYS 122",
                            CourseName = "Physics II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3400),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000012"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000009"),
                            CourseCode = "MATH 144",
                            CourseName = "Finite Mathematics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3410),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000010"),
                            CourseCode = "CENG 112",
                            CourseName = "Data Structures",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3410),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000011"),
                            CourseCode = "ECON 106",
                            CourseName = "Principles of Economics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3410),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000012"),
                            CourseCode = "ENG 102",
                            CourseName = "Academic English II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3420),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000019"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000013"),
                            CourseCode = "GCC 101",
                            CourseName = "Career Planning and Development",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3420),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 0
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000014"),
                            CourseCode = "CENG 211",
                            CourseName = "Fundamentals of Programming",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3420),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000015"),
                            CourseCode = "CENG 213",
                            CourseName = "Theory of Computation",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3420),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000016"),
                            CourseCode = "CENG 215",
                            CourseName = "Circuits and Electronics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3430),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000017"),
                            CourseCode = "MATH 255",
                            CourseName = "Differential Equations",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3430),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000018"),
                            CourseCode = "HIST 201",
                            CourseName = "History of Turkish Republic I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3430),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000019"),
                            CourseCode = "TURK 201",
                            CourseName = "Turkish Language I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3430),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000020"),
                            CourseCode = "HIST 203",
                            CourseName = "History of Turkish Revolution I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3440),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000021"),
                            CourseCode = "TURK 203",
                            CourseName = "Turkish for International Students I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3440),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000022"),
                            CourseCode = "CENG 212",
                            CourseName = "Programming Language Concepts",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3450),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000023"),
                            CourseCode = "CENG 214",
                            CourseName = "Logic Design",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3450),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000024"),
                            CourseCode = "CENG 216",
                            CourseName = "Numerical Computing",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3450),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000025"),
                            CourseCode = "CENG 218",
                            CourseName = "Analysis and Design of Algorithms",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3450),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000026"),
                            CourseCode = "CENG 222",
                            CourseName = "Probability and Statistics",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3460),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 5
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000027"),
                            CourseCode = "HIST 202",
                            CourseName = "History of Turkish Republic II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3460),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000028"),
                            CourseCode = "TURK 202",
                            CourseName = "Turkish Language II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3460),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000029"),
                            CourseCode = "HIST 204",
                            CourseName = "History of Turkish Revolution II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3460),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000030"),
                            CourseCode = "TURK 204",
                            CourseName = "Turkish for International Students II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3510),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 2
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000031"),
                            CourseCode = "CENG 311",
                            CourseName = "Computer Architecture",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3510),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000032"),
                            CourseCode = "CENG 315",
                            CourseName = "Information Management",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3510),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000033"),
                            CourseCode = "CENG 312",
                            CourseName = "Computer Networks",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3520),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000034"),
                            CourseCode = "CENG 316",
                            CourseName = "Software Engineering",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3520),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000035"),
                            CourseCode = "CENG 318",
                            CourseName = "Human-Computer Interaction",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3520),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000036"),
                            CourseCode = "CENG 322",
                            CourseName = "Operating Systems",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3520),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000037"),
                            CourseCode = "CENG 411",
                            CourseName = "Professionalism in Computer Engineering",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3530),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 6
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000038"),
                            CourseCode = "CENG 415",
                            CourseName = "Undergraduate Thesis and Seminar I",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3530),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000039"),
                            CourseCode = "CENG 416",
                            CourseName = "Undergraduate Thesis and Seminar II",
                            CourseType = 1,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3530),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 8
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000040"),
                            CourseCode = "CENG 370",
                            CourseName = "Mainframe Computers",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3530),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000041"),
                            CourseCode = "CENG 381",
                            CourseName = "Stochastic Processes",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3540),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000042"),
                            CourseCode = "CENG 382",
                            CourseName = "Information Theory",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3540),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000043"),
                            CourseCode = "CENG 383",
                            CourseName = "Real-Time Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3540),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000044"),
                            CourseCode = "CENG 384",
                            CourseName = "Microprocessors",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3540),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000045"),
                            CourseCode = "CENG 385",
                            CourseName = "Mathematical Logic",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3550),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000046"),
                            CourseCode = "CENG 386",
                            CourseName = "Fuzzy Logic Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3550),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000047"),
                            CourseCode = "CENG 388",
                            CourseName = "Web Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3550),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000048"),
                            CourseCode = "CENG 389",
                            CourseName = "Mobile Application Development",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3550),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000049"),
                            CourseCode = "CENG 390",
                            CourseName = "Cloud Computing",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3560),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000050"),
                            CourseCode = "CENG 391",
                            CourseName = "Introduction to Image Understanding",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3560),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000051"),
                            CourseCode = "CENG 421",
                            CourseName = "Computer Network Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3560),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000052"),
                            CourseCode = "CENG 422",
                            CourseName = "Computer Network Design and Management",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3560),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000053"),
                            CourseCode = "CENG 431",
                            CourseName = "Software Systems Development",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3570),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000054"),
                            CourseCode = "CENG 432",
                            CourseName = "Fundamentals of Enterprise Application Development",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3570),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000055"),
                            CourseCode = "CENG 433",
                            CourseName = "Scalable Software Development for the Internet",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3570),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000056"),
                            CourseCode = "CENG 434",
                            CourseName = "Enterprise Application Integrations",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3570),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000057"),
                            CourseCode = "CENG 435",
                            CourseName = "Database Management System Design and Implementation",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3580),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000058"),
                            CourseCode = "CENG 436",
                            CourseName = "Distributed Information Management",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3580),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000059"),
                            CourseCode = "CENG 437",
                            CourseName = "Software Quality Management",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3580),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000060"),
                            CourseCode = "CENG 441",
                            CourseName = "Introduction to Parallel Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3580),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000061"),
                            CourseCode = "CENG 442",
                            CourseName = "Multi-Core Architectures and Operating Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3590),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000062"),
                            CourseCode = "CENG 443",
                            CourseName = "Heterogeneous Parallel Programming",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3600),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000063"),
                            CourseCode = "CENG 444",
                            CourseName = "Parallel Programming Patterns",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3600),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000064"),
                            CourseCode = "CENG 451",
                            CourseName = "Advanced Digital System Design",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3600),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000065"),
                            CourseCode = "CENG 452",
                            CourseName = "Software Development for Embedded Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3600),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000066"),
                            CourseCode = "CENG 461",
                            CourseName = "Artificial Intelligence",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3610),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000067"),
                            CourseCode = "CENG 462",
                            CourseName = "Soft Computing",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3610),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000068"),
                            CourseCode = "CENG 463",
                            CourseName = "Introduction to Machine Learning",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3610),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000069"),
                            CourseCode = "CENG 464",
                            CourseName = "Text Mining",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3610),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000070"),
                            CourseCode = "CENG 465",
                            CourseName = "Principles of Data-Intensive Systems",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3620),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000071"),
                            CourseCode = "CENG 471",
                            CourseName = "Cryptography",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3620),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000072"),
                            CourseCode = "CENG 472",
                            CourseName = "Computer Network Security",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3620),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000073"),
                            CourseCode = "CENG 473",
                            CourseName = "Information and Communication Technologies Security",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3620),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000074"),
                            CourseCode = "CENG 481",
                            CourseName = "Theoretical Approaches in Computer Science",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3630),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000075"),
                            CourseCode = "CENG 482",
                            CourseName = "Evolutionary Computation",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3630),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000076"),
                            CourseCode = "CENG 483",
                            CourseName = "Behavioral Robotics",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3630),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000077"),
                            CourseCode = "CENG 484",
                            CourseName = "Data Mining",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3630),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000078"),
                            CourseCode = "CENG 485",
                            CourseName = "Entrepreneurship in Information Technologies",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3640),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000079"),
                            CourseCode = "CENG 486",
                            CourseName = "Entrepreneurship for Smart Businesses",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3640),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000080"),
                            CourseCode = "CENG 487",
                            CourseName = "Introduction to Computer Graphics",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3640),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000081"),
                            CourseCode = "CENG 488",
                            CourseName = "Computer Graphics",
                            CourseType = 2,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3640),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000082"),
                            CourseCode = "ART 201",
                            CourseName = "Drawing-Sketch",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3650),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000083"),
                            CourseCode = "ART 202",
                            CourseName = "Painting",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3650),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000084"),
                            CourseCode = "ART 203",
                            CourseName = "Sculpture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3650),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000085"),
                            CourseCode = "ART 204",
                            CourseName = "Artistic Ceramics",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3650),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000086"),
                            CourseCode = "ART 205",
                            CourseName = "Color Photography",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3660),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000087"),
                            CourseCode = "ART 206",
                            CourseName = "Introduction to Sound Production and Design",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3660),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000088"),
                            CourseCode = "ART 210",
                            CourseName = "Western Music and Aesthetics",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3660),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000089"),
                            CourseCode = "ART 211",
                            CourseName = "Music Workshop",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3660),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000090"),
                            CourseCode = "ART 212",
                            CourseName = "Introduction to Harmony",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3670),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000091"),
                            CourseCode = "ART 230",
                            CourseName = "Dance Education",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3680),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000092"),
                            CourseCode = "ART 231",
                            CourseName = "Traditional Folk Dances I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3680),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000093"),
                            CourseCode = "ART 232",
                            CourseName = "Traditional Folk Dances II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3680),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000094"),
                            CourseCode = "CHN 201",
                            CourseName = "Basic Chinese I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3680),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000095"),
                            CourseCode = "FREN 201",
                            CourseName = "Basic French I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3690),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000096"),
                            CourseCode = "FREN 202",
                            CourseName = "Basic French II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3690),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000097"),
                            CourseCode = "FREN 203",
                            CourseName = "Intermediate French I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3690),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000098"),
                            CourseCode = "GER 201",
                            CourseName = "Basic German I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3690),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000099"),
                            CourseCode = "GER 202",
                            CourseName = "Basic German II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3700),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000100"),
                            CourseCode = "GER 203",
                            CourseName = "Intermediate German I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3700),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000101"),
                            CourseCode = "GER 204",
                            CourseName = "Intermediate German II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3700),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000102"),
                            CourseCode = "HUM 203",
                            CourseName = "Introduction to Social Anthropology",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3700),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000103"),
                            CourseCode = "HUM 205",
                            CourseName = "Current Issues in Turkish Language",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3710),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000104"),
                            CourseCode = "HUM 206",
                            CourseName = "Comparative Cultures",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3710),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000105"),
                            CourseCode = "HUM 207",
                            CourseName = "Ottoman History I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3710),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000106"),
                            CourseCode = "HUM 208",
                            CourseName = "Ottoman History II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3710),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000107"),
                            CourseCode = "HUM 211",
                            CourseName = "Introduction to Russian Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3720),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000108"),
                            CourseCode = "HUM 213",
                            CourseName = "History of Western Civilizations I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3720),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000109"),
                            CourseCode = "HUM 214",
                            CourseName = "History of Western Civilizations II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3720),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000110"),
                            CourseCode = "HUM 215",
                            CourseName = "Mythology",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3720),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000111"),
                            CourseCode = "HUM 216",
                            CourseName = "Analysis of Folklore Texts",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000112"),
                            CourseCode = "HUM 217",
                            CourseName = "Art History I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000113"),
                            CourseCode = "HUM 218",
                            CourseName = "Art History II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000114"),
                            CourseCode = "HUM 219",
                            CourseName = "Art History III",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3730),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000115"),
                            CourseCode = "HUM 220",
                            CourseName = "Introduction to Japanese Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000116"),
                            CourseCode = "HUM 223",
                            CourseName = "Introduction to French Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000117"),
                            CourseCode = "HUM 226",
                            CourseName = "Textual Analysis of Contemporary Turkish Literature",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000118"),
                            CourseCode = "HUM 227",
                            CourseName = "Turkish Language Reform",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3740),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000119"),
                            CourseCode = "HUM 230",
                            CourseName = "Group Dynamics",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000120"),
                            CourseCode = "HUM 231",
                            CourseName = "Sociology of Work",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000121"),
                            CourseCode = "HUM 232",
                            CourseName = "Visual Communication Symbols in Art and Daily Life",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3750),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000122"),
                            CourseCode = "HUM 233",
                            CourseName = "Visual Perception in Art",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000123"),
                            CourseCode = "HUM 240",
                            CourseName = "Introduction to Spanish Culture",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000124"),
                            CourseCode = "HUM 251",
                            CourseName = "Ottoman Turkish I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3760),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000125"),
                            CourseCode = "HUM 252",
                            CourseName = "Ottoman Turkish II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000126"),
                            CourseCode = "HUM 255",
                            CourseName = "Latin I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000127"),
                            CourseCode = "HUM 256",
                            CourseName = "Latin II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000128"),
                            CourseCode = "JAP 201",
                            CourseName = "Basic Japanese I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3770),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000129"),
                            CourseCode = "JAP 202",
                            CourseName = "Basic Japanese II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000130"),
                            CourseCode = "JAP 203",
                            CourseName = "Intermediate Japanese I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000131"),
                            CourseCode = "MAN 203",
                            CourseName = "Project Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000132"),
                            CourseCode = "MAN 205",
                            CourseName = "Innovation Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3780),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000133"),
                            CourseCode = "MAN 206",
                            CourseName = "Businesses and Business Life",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000134"),
                            CourseCode = "MAN 210",
                            CourseName = "Corporate Communication and Management Skills",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000135"),
                            CourseCode = "MAN 211",
                            CourseName = "Communication and Management Skills for Engineers",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000136"),
                            CourseCode = "MAN 215",
                            CourseName = "Engineering Economy",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3790),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000137"),
                            CourseCode = "MAN 216",
                            CourseName = "Introduction to Marketing",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3800),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000138"),
                            CourseCode = "MAN 217",
                            CourseName = "Fundamentals of Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3800),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000139"),
                            CourseCode = "MAN 218",
                            CourseName = "Entrepreneurship",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3800),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000140"),
                            CourseCode = "MAN 220",
                            CourseName = "Leadership",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000141"),
                            CourseCode = "MAN 221",
                            CourseName = "Organizational and Personal Career Management",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000142"),
                            CourseCode = "MAN 230",
                            CourseName = "Law in Business Life",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000143"),
                            CourseCode = "MAN 231",
                            CourseName = "Intellectual and Industrial Property Law",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3810),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000144"),
                            CourseCode = "RUS 201",
                            CourseName = "Basic Russian I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000145"),
                            CourseCode = "RUS 202",
                            CourseName = "Basic Russian II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000146"),
                            CourseCode = "RUS 203",
                            CourseName = "Intermediate Russian I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000147"),
                            CourseCode = "RUS 204",
                            CourseName = "Intermediate Russian II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3820),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000148"),
                            CourseCode = "RUS 205",
                            CourseName = "Advanced Russian I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000149"),
                            CourseCode = "RUS 206",
                            CourseName = "Advanced Russian II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000150"),
                            CourseCode = "SPAN 203",
                            CourseName = "Intermediate Spanish I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000151"),
                            CourseCode = "SPAN 204",
                            CourseName = "Intermediate Spanish II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000152"),
                            CourseCode = "SPRT 201",
                            CourseName = "Tennis I",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3830),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000153"),
                            CourseCode = "SPRT 202",
                            CourseName = "Tennis II",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000154"),
                            CourseCode = "SPRT 203",
                            CourseName = "Badminton",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000155"),
                            CourseCode = "SPRT 204",
                            CourseName = "Basketball",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3840),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000156"),
                            CourseCode = "SPRT 206",
                            CourseName = "Table Tennis",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3850),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        },
                        new
                        {
                            Id = new Guid("30000000-0000-0000-0000-000000000157"),
                            CourseCode = "SPRT 208",
                            CourseName = "Basic Fitness Techniques",
                            CourseType = 3,
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3850),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Ects = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.CourseTaken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CourseCodeInTranscript")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseCodeInTranscript");

                    b.Property<string>("CourseNameInTranscript")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CourseNameInTranscript");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("CreditsEarned")
                        .HasColumnType("integer")
                        .HasColumnName("CreditsEarned");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Grade");

                    b.Property<bool>("IsSuccessfullyCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSuccessfullyCompleted");

                    b.Property<Guid?>("MatchedCourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("MatchedCourseId");

                    b.Property<string>("SemesterTaken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SemesterTaken");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("MatchedCourseId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("CourseTakens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("FacultyId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2710),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Computer Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2720),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Electrical-Electronics Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2720),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Mechanical Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000004"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2720),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Civil Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000005"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2720),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Environmental Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000006"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2730),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Chemical Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000007"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2730),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Food Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000008"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2730),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Materials Science and Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000009"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2730),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Bioengineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000010"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2730),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Energy Systems Engineering"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000011"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2740),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Name = "Photonics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000012"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2740),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Physics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000013"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2740),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000014"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2740),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000015"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2740),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Name = "Molecular Biology and Genetics"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000016"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2750),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Architecture"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000017"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2750),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Urban and Regional Planning"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000018"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2750),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Name = "Industrial Design"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000019"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2750),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Name = "Foreign Languages"
                        },
                        new
                        {
                            Id = new Guid("20000000-0000-0000-0000-000000000020"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2760),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Name = "General Culture Courses"
                        });
                });

            modelBuilder.Entity("Domain.Entities.EligibilityCheckResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ActualValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ActualValue");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CheckDate");

                    b.Property<int>("CheckType")
                        .HasColumnType("integer")
                        .HasColumnName("CheckType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GraduationProcessId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsMet")
                        .HasColumnType("boolean")
                        .HasColumnName("IsMet");

                    b.Property<string>("NotesOrMissingItems")
                        .HasColumnType("text")
                        .HasColumnName("NotesOrMissingItems");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessId");

                    b.Property<string>("RequiredValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RequiredValue");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GraduationProcessId");

                    b.ToTable("EligibilityCheckResults", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ActivationKey")
                        .HasColumnType("text")
                        .HasColumnName("ActivationKey");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("IsVerified");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Faculties", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2630),
                            Name = "Faculty of Engineering"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2670),
                            Name = "Faculty of Science"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2670),
                            Name = "Faculty of Architecture"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000004"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2670),
                            Name = "School of Foreign Languages"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000005"),
                            CreatedDate = new DateTime(2025, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(2680),
                            Name = "Faculty of General Studies"
                        });
                });

            modelBuilder.Entity("Domain.Entities.FileAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FileName");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FilePath");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("FileSize");

                    b.Property<int>("FileType")
                        .HasColumnType("integer")
                        .HasColumnName("FileType");

                    b.Property<Guid?>("GraduationProcessId")
                        .HasColumnType("uuid");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("MimeType");

                    b.Property<Guid?>("ProcessId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProcessId");

                    b.Property<int>("StorageType")
                        .HasColumnType("integer")
                        .HasColumnName("StorageType");

                    b.Property<Guid?>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<Guid?>("TranscriptDataId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UploadDate");

                    b.Property<Guid>("UploaderUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UploaderUserId");

                    b.HasKey("Id");

                    b.HasIndex("GraduationProcessId");

                    b.HasIndex("StudentUserId");

                    b.HasIndex("TranscriptDataId");

                    b.HasIndex("UploaderUserId");

                    b.ToTable("FileAttachments", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.GraduationProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AcademicTerm")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("AcademicTerm");

                    b.Property<DateTime?>("AdvisorReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AdvisorReviewDate");

                    b.Property<Guid?>("AdvisorUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("AdvisorUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeansOfficeReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeansOfficeReviewDate");

                    b.Property<Guid?>("DeansOfficeUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeansOfficeUserId");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime?>("DeptSecretaryReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeptSecretaryReviewDate");

                    b.Property<Guid?>("DeptSecretaryUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("DeptSecretaryUserId");

                    b.Property<DateTime>("InitiationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("InitiationDate");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastUpdateDate");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("Notes");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("StudentAffairsReviewDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StudentAffairsReviewDate");

                    b.Property<Guid?>("StudentAffairsUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentAffairsUserId");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorUserId");

                    b.HasIndex("DeansOfficeUserId");

                    b.HasIndex("DeptSecretaryUserId");

                    b.HasIndex("StudentAffairsUserId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("GraduationProcesses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.GraduationRequirementSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AcademicTerm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatedByUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<Guid>("LastModifiedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("LastModifiedByUserId");

                    b.Property<decimal>("MinGpa")
                        .HasColumnType("numeric")
                        .HasColumnName("MinGpa");

                    b.Property<int?>("MinNonTechnicalElectiveCoursesCount")
                        .HasColumnType("integer")
                        .HasColumnName("MinNonTechnicalElectiveCoursesCount");

                    b.Property<int?>("MinTechnicalElectiveCoursesCount")
                        .HasColumnType("integer")
                        .HasColumnName("MinTechnicalElectiveCoursesCount");

                    b.Property<int?>("MinUniversityElectiveCoursesCount")
                        .HasColumnType("integer")
                        .HasColumnName("MinUniversityElectiveCoursesCount");

                    b.Property<int>("TotalMinEcts")
                        .HasColumnType("integer")
                        .HasColumnName("TotalMinEcts");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.HasIndex("LastModifiedByUserId");

                    b.ToTable("GraduationRequirementSets", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MailLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Body");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("ErrorMessage");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("From");

                    b.Property<bool>("IsBodyHtml")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBodyHtml");

                    b.Property<bool>("IsSentSuccessfully")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSentSuccessfully");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SentDate");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Subject");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("To");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("MailLogs", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("IsRead");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Message");

                    b.Property<Guid>("RecipientUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("RecipientUserId");

                    b.Property<Guid?>("RelatedProcessId")
                        .HasColumnType("uuid")
                        .HasColumnName("RelatedProcessId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("RecipientUserId");

                    b.HasIndex("RelatedProcessId");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "SYSTEM_ADMIN"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "STUDENT"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "STUDENT_AFFAIRS_STAFF"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "ADVISOR"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "DEPARTMENT_SECRETARY"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "DEANS_OFFICE_STAFF"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("IsVerified");

                    b.Property<byte[]>("SecretKey")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("SecretKey");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpAuthenticators", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RankingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AcademicTerm")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("AcademicTerm");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GeneratedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("GeneratedByUserId");

                    b.Property<DateTime>("GenerationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("GenerationDate");

                    b.Property<int>("ListType")
                        .HasColumnType("integer")
                        .HasColumnName("ListType");

                    b.Property<decimal?>("MinGpaForInclusion")
                        .HasColumnType("numeric")
                        .HasColumnName("MinGpaForInclusion");

                    b.Property<string>("PrimarySortField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PrimarySortField");

                    b.Property<Guid?>("ScopeDepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("ScopeDepartmentId");

                    b.Property<Guid?>("ScopeFacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("ScopeFacultyId");

                    b.Property<string>("SortOrder")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SortOrder");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GeneratedByUserId");

                    b.HasIndex("ScopeDepartmentId");

                    b.HasIndex("ScopeFacultyId");

                    b.ToTable("RankingLists", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RankingListCriteria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CriteriaName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CriteriaName");

                    b.Property<string>("CriteriaValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CriteriaValue");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("RankingListId")
                        .HasColumnType("uuid")
                        .HasColumnName("RankingListId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("RankingListId");

                    b.ToTable("RankingListCriterias", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RankingListEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<decimal>("GpaAtRanking")
                        .HasColumnType("numeric")
                        .HasColumnName("GpaAtRanking");

                    b.Property<int>("HonourStatus")
                        .HasColumnType("integer")
                        .HasColumnName("HonourStatus");

                    b.Property<int>("Rank")
                        .HasColumnType("integer")
                        .HasColumnName("Rank");

                    b.Property<Guid>("RankingListId")
                        .HasColumnType("uuid")
                        .HasColumnName("RankingListId");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("RankingListId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("RankingListEntries", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CreatedByIp");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpiresDate");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("text")
                        .HasColumnName("ReasonRevoked");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("text")
                        .HasColumnName("ReplacedByToken");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("text")
                        .HasColumnName("RevokedByIp");

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RevokedDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Token");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RequirementMandatoryCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("GraduationRequirementSetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RequirementSetId")
                        .HasColumnType("uuid")
                        .HasColumnName("RequirementSetId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GraduationRequirementSetId");

                    b.ToTable("RequirementMandatoryCourses", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("FacultyId");

                    b.Property<string>("StaffIdentificationNumber")
                        .HasColumnType("text")
                        .HasColumnName("StaffIdentificationNumber");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Staffs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF001",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000042"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000002"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF002",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000043"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF003",
                            Title = "Department Secretary"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000044"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF004",
                            Title = "Dean's Office Staff"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000045"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000014"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StaffIdentificationNumber = "STAFF005",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000046"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000012"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StaffIdentificationNumber = "STAFF006",
                            Title = "Academic Staff"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000047"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000016"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StaffIdentificationNumber = "STAFF007",
                            Title = "Advisor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000048"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000019"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000004"),
                            StaffIdentificationNumber = "STAFF008",
                            Title = "Instructor"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000049"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000020"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000005"),
                            StaffIdentificationNumber = "STAFF009",
                            Title = "Coordinator"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            FacultyId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StaffIdentificationNumber = "STAFF010",
                            Title = "Advisor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AssignedAdvisorUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("AssignedAdvisorUserId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<int?>("CurrentEctsCompleted")
                        .HasColumnType("integer")
                        .HasColumnName("CurrentEctsCompleted");

                    b.Property<decimal?>("CurrentGpa")
                        .HasColumnType("numeric")
                        .HasColumnName("CurrentGpa");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("DepartmentId");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EnrollDate");

                    b.Property<int>("GraduationStatus")
                        .HasColumnType("integer")
                        .HasColumnName("GraduationStatus");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProgramName");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("StudentNumber");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAdvisorUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000001"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 9, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3170),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400001"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000002"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 1, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3180),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400002"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000003"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 4, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3190),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400003"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000004"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 2, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3190),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400004"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000005"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 6, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3190),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400005"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000006"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 2, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3190),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400006"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000007"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 4, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3200),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400007"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000008"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 2, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3200),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400008"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000009"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 8, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3200),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400009"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000010"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 11, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3200),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400010"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000011"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 6, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3200),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400011"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000012"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3210),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400012"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000013"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 10, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3210),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400013"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000014"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 6, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3210),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400014"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000015"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3210),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400015"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000016"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 4, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3210),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400016"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000017"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 9, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3220),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400017"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000018"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 5, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3220),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400018"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000019"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 12, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3220),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400019"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000020"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 12, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3220),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400020"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000021"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 7, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3230),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400021"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000022"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 7, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3230),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400022"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000023"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 11, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3230),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400023"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000024"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 10, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3230),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400024"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000025"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 12, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3230),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400025"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000026"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 7, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3240),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400026"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000027"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 2, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3240),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400027"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000028"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 7, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3240),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400028"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000029"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 11, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3240),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400029"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000030"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 6, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3250),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400030"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000031"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 10, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3250),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400031"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000032"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 12, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3250),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400032"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000033"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 4, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3250),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400033"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000034"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 2, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3260),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400034"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000035"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2023, 11, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3260),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400035"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000036"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2021, 7, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3260),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400036"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000037"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2020, 9, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3260),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400037"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000038"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2024, 1, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3260),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400038"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000039"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000041"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 12, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3270),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400039"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000040"),
                            AssignedAdvisorUserId = new Guid("40000000-0000-0000-0000-000000000050"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentId = new Guid("20000000-0000-0000-0000-000000000001"),
                            EnrollDate = new DateTime(2022, 7, 19, 23, 25, 13, 39, DateTimeKind.Utc).AddTicks(3270),
                            GraduationStatus = 9,
                            ProgramName = "Undergraduate Program",
                            StudentNumber = "202400040"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TranscriptData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<bool>("IsValidForProcessing")
                        .HasColumnType("boolean")
                        .HasColumnName("IsValidForProcessing");

                    b.Property<int>("ParsedEcts")
                        .HasColumnType("integer")
                        .HasColumnName("ParsedEcts");

                    b.Property<decimal>("ParsedGpa")
                        .HasColumnType("numeric")
                        .HasColumnName("ParsedGpa");

                    b.Property<DateTime>("ParsingDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ParsingDate");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("StudentUserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("StudentUserId");

                    b.ToTable("TranscriptDatas", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int>("AuthenticatorType")
                        .HasColumnType("integer")
                        .HasColumnName("AuthenticatorType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-11111111111a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "systemadmin@university.edu",
                            FirstName = "System",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 43, 20, 251, 160, 236, 203, 84, 28, 4, 172, 112, 201, 229, 43, 10, 212, 36, 139, 38, 185, 30, 166, 153, 42, 232, 236, 247, 92, 250, 185, 139, 145, 127, 244, 189, 206, 221, 160, 100, 221, 30, 220, 187, 130, 179, 124, 29, 95, 110, 183, 104, 61, 120, 37, 3, 50, 161, 125, 18, 214, 124, 151, 167, 216 },
                            PasswordSalt = new byte[] { 203, 69, 4, 240, 139, 13, 42, 224, 247, 110, 251, 156, 96, 219, 93, 184, 240, 112, 43, 207, 226, 155, 118, 103, 176, 166, 80, 150, 222, 100, 93, 226, 125, 177, 12, 20, 162, 246, 149, 184, 21, 60, 182, 181, 105, 163, 199, 148, 237, 152, 180, 166, 219, 201, 206, 66, 20, 137, 20, 51, 43, 5, 70, 207, 47, 245, 173, 145, 77, 33, 182, 197, 49, 52, 151, 82, 219, 228, 48, 194, 59, 57, 33, 182, 182, 116, 151, 218, 57, 110, 103, 212, 210, 83, 85, 232, 67, 89, 221, 237, 235, 142, 227, 225, 14, 57, 254, 100, 124, 217, 84, 208, 59, 210, 230, 126, 78, 239, 169, 37, 83, 41, 55, 132, 22, 91, 200, 166 },
                            PhoneNumber = "1112223344",
                            UserName = "systemadmin"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-22222222222a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "student@std.iyte.edu.tr",
                            FirstName = "Student",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "User",
                            PasswordHash = new byte[] { 199, 235, 255, 9, 30, 225, 246, 67, 66, 162, 155, 51, 165, 253, 104, 199, 159, 150, 212, 110, 110, 46, 128, 4, 183, 5, 165, 182, 119, 247, 166, 163, 128, 206, 81, 127, 79, 205, 62, 93, 247, 227, 42, 107, 13, 26, 112, 218, 226, 211, 44, 13, 126, 201, 124, 170, 198, 51, 77, 172, 150, 254, 124, 177 },
                            PasswordSalt = new byte[] { 105, 124, 119, 131, 169, 225, 115, 220, 57, 214, 140, 14, 236, 103, 195, 248, 141, 132, 228, 51, 211, 15, 110, 75, 180, 1, 24, 205, 36, 143, 59, 222, 158, 112, 244, 66, 127, 219, 240, 146, 215, 67, 67, 3, 111, 110, 92, 144, 194, 201, 164, 120, 252, 181, 153, 126, 20, 192, 83, 56, 111, 48, 241, 187, 77, 155, 191, 21, 97, 51, 173, 94, 33, 24, 15, 170, 146, 214, 74, 192, 68, 148, 138, 162, 205, 11, 191, 159, 248, 203, 238, 46, 45, 131, 47, 34, 25, 61, 201, 30, 168, 153, 215, 0, 17, 1, 153, 223, 5, 148, 255, 96, 220, 184, 215, 195, 19, 56, 239, 251, 31, 165, 182, 246, 46, 119, 71, 65 },
                            PhoneNumber = "2223334455",
                            UserName = "studentuser"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-33333333333a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "studentaffairs@iyte.edu.tr",
                            FirstName = "StudentAffairs",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Staff",
                            PasswordHash = new byte[] { 226, 55, 138, 21, 52, 17, 16, 227, 147, 45, 101, 5, 56, 10, 154, 240, 116, 199, 123, 107, 155, 179, 153, 89, 73, 204, 18, 239, 156, 245, 136, 99, 186, 121, 74, 126, 98, 83, 111, 116, 149, 86, 127, 211, 32, 7, 87, 29, 91, 228, 201, 69, 224, 1, 66, 191, 155, 8, 217, 147, 95, 104, 56, 175 },
                            PasswordSalt = new byte[] { 35, 40, 216, 224, 180, 244, 1, 62, 6, 245, 183, 210, 25, 155, 103, 68, 12, 87, 174, 165, 84, 93, 234, 5, 10, 28, 56, 206, 204, 242, 102, 176, 97, 109, 15, 141, 221, 116, 249, 159, 134, 134, 12, 82, 151, 208, 66, 107, 191, 233, 130, 21, 91, 217, 78, 230, 240, 160, 35, 94, 135, 213, 52, 23, 64, 186, 68, 92, 147, 8, 49, 200, 159, 124, 132, 54, 251, 214, 32, 54, 237, 243, 205, 60, 190, 250, 86, 55, 224, 9, 197, 245, 195, 99, 240, 102, 59, 3, 89, 130, 24, 167, 163, 6, 7, 57, 244, 57, 59, 91, 124, 22, 40, 180, 222, 250, 55, 158, 242, 96, 89, 111, 191, 218, 241, 151, 82, 15 },
                            PhoneNumber = "3334445566",
                            UserName = "studentaffairs"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-44444444444a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "advisor@iyte.edu.tr",
                            FirstName = "Advisor",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "User",
                            PasswordHash = new byte[] { 61, 13, 224, 76, 93, 83, 163, 84, 255, 254, 239, 184, 160, 132, 44, 127, 142, 85, 16, 179, 179, 111, 105, 204, 45, 168, 87, 253, 69, 2, 22, 168, 128, 202, 47, 130, 244, 104, 18, 1, 135, 131, 42, 191, 255, 105, 155, 116, 209, 236, 198, 48, 175, 166, 35, 145, 12, 207, 251, 5, 87, 250, 108, 166 },
                            PasswordSalt = new byte[] { 255, 168, 35, 170, 187, 52, 122, 192, 127, 122, 16, 157, 27, 159, 87, 141, 83, 40, 142, 61, 119, 195, 71, 75, 197, 17, 92, 99, 134, 122, 205, 234, 114, 83, 61, 224, 214, 111, 54, 208, 84, 142, 218, 229, 11, 150, 21, 65, 47, 95, 71, 110, 76, 187, 139, 38, 152, 38, 109, 154, 227, 118, 23, 187, 254, 44, 184, 156, 34, 132, 18, 22, 27, 117, 208, 172, 121, 1, 110, 109, 93, 37, 146, 207, 40, 204, 27, 90, 139, 114, 231, 228, 52, 78, 86, 204, 187, 89, 93, 225, 100, 235, 8, 27, 104, 84, 54, 144, 127, 109, 140, 23, 81, 150, 212, 132, 16, 45, 203, 119, 128, 131, 243, 239, 3, 243, 136, 38 },
                            PhoneNumber = "4445556677",
                            UserName = "advisoruser"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-55555555555a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deptsecretary@iyte.edu.tr",
                            FirstName = "Department",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Secretary",
                            PasswordHash = new byte[] { 77, 196, 240, 73, 252, 43, 210, 183, 184, 135, 90, 188, 235, 249, 195, 185, 190, 172, 185, 190, 200, 165, 184, 0, 175, 92, 151, 248, 31, 25, 174, 57, 167, 186, 67, 183, 244, 241, 142, 66, 129, 15, 168, 49, 49, 83, 223, 69, 176, 177, 207, 206, 47, 152, 150, 87, 121, 235, 216, 139, 219, 216, 245, 172 },
                            PasswordSalt = new byte[] { 162, 210, 143, 159, 215, 146, 70, 55, 55, 93, 55, 219, 236, 124, 204, 208, 93, 134, 165, 233, 58, 135, 232, 18, 1, 100, 23, 93, 1, 29, 100, 190, 9, 110, 230, 79, 61, 215, 182, 67, 33, 34, 28, 190, 229, 176, 84, 118, 100, 2, 13, 45, 39, 47, 71, 108, 108, 83, 180, 137, 59, 5, 127, 48, 55, 82, 238, 75, 42, 14, 220, 82, 0, 211, 229, 236, 127, 34, 69, 250, 70, 177, 243, 234, 219, 167, 132, 198, 92, 131, 186, 191, 195, 225, 160, 100, 213, 10, 32, 29, 24, 242, 185, 216, 110, 141, 75, 196, 72, 196, 160, 177, 98, 74, 122, 174, 10, 99, 53, 138, 35, 255, 55, 70, 143, 244, 121, 155 },
                            PhoneNumber = "5556667788",
                            UserName = "deptsecretary"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-66666666666a"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deansoffice@iyte.edu.tr",
                            FirstName = "DeansOffice",
                            IsActive = true,
                            IsEmailVerified = false,
                            LastName = "Staff",
                            PasswordHash = new byte[] { 45, 52, 133, 188, 204, 98, 213, 125, 168, 188, 113, 153, 12, 221, 3, 200, 183, 91, 226, 134, 184, 93, 143, 29, 116, 9, 195, 93, 163, 127, 62, 164, 124, 200, 31, 108, 101, 190, 187, 211, 115, 72, 248, 80, 175, 221, 226, 188, 220, 89, 76, 198, 172, 141, 114, 30, 189, 128, 152, 201, 248, 180, 33, 101 },
                            PasswordSalt = new byte[] { 52, 183, 43, 242, 24, 20, 231, 57, 132, 245, 51, 121, 60, 207, 44, 93, 178, 161, 86, 245, 193, 253, 144, 0, 94, 193, 230, 0, 108, 223, 90, 97, 16, 131, 151, 17, 132, 112, 79, 58, 190, 129, 103, 81, 30, 161, 32, 37, 30, 210, 132, 192, 242, 173, 74, 198, 202, 124, 96, 14, 2, 73, 133, 44, 58, 193, 7, 94, 229, 117, 152, 31, 63, 214, 120, 106, 246, 49, 112, 22, 230, 239, 225, 27, 132, 31, 219, 159, 167, 230, 164, 190, 93, 172, 142, 138, 144, 85, 80, 48, 135, 57, 70, 178, 129, 230, 206, 79, 124, 196, 244, 88, 28, 43, 0, 25, 240, 214, 195, 15, 12, 231, 162, 65, 226, 61, 233, 26 },
                            PhoneNumber = "6667778899",
                            UserName = "deansoffice"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000001"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "deniz.yilmaz.s1@std.iyte.edu.tr",
                            FirstName = "Deniz",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "deniz.yilmaz.s1"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000002"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.demir.s2@std.iyte.edu.tr",
                            FirstName = "Hüseyin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "huseyin.demir.s2"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000003"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "merve.dogan.s3@std.iyte.edu.tr",
                            FirstName = "Merve",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "merve.dogan.s3"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000004"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.kaya.s4@std.iyte.edu.tr",
                            FirstName = "Hüseyin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "huseyin.kaya.s4"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000005"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.yildiz.s5@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "hatice.yildiz.s5"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000006"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.ozturk.s6@std.iyte.edu.tr",
                            FirstName = "Hüseyin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "huseyin.ozturk.s6"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000007"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.sahin.s7@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "hatice.sahin.s7"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000008"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.kaya.s8@std.iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ali.kaya.s8"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000009"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "merve.yilmaz.s9@std.iyte.edu.tr",
                            FirstName = "Merve",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "merve.yilmaz.s9"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000010"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.yilmaz.s10@std.iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ali.yilmaz.s10"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000011"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.demir.s11@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "hatice.demir.s11"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000012"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mustafa.arslan.s12@std.iyte.edu.tr",
                            FirstName = "Mustafa",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "mustafa.arslan.s12"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000013"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.yildiz.s13@std.iyte.edu.tr",
                            FirstName = "Ayşe",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ayse.yildiz.s13"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000014"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.arslan.s14@std.iyte.edu.tr",
                            FirstName = "Murat",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "murat.arslan.s14"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000015"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "merve.celik.s15@std.iyte.edu.tr",
                            FirstName = "Merve",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "merve.celik.s15"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000016"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.kaya.s16@std.iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "mehmet.kaya.s16"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000017"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.yildiz.s17@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "hatice.yildiz.s17"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000018"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emre.demir.s18@std.iyte.edu.tr",
                            FirstName = "Emre",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "emre.demir.s18"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000019"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "selin.yildiz.s19@std.iyte.edu.tr",
                            FirstName = "Selin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "selin.yildiz.s19"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000020"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emre.sahin.s20@std.iyte.edu.tr",
                            FirstName = "Emre",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "emre.sahin.s20"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000021"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ebru.kaya.s21@std.iyte.edu.tr",
                            FirstName = "Ebru",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ebru.kaya.s21"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000022"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.aydin.s22@std.iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "mehmet.aydin.s22"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000023"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.sahin.s23@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "hatice.sahin.s23"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000024"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.kaya.s24@std.iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "veli.kaya.s24"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000025"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "merve.dogan.s25@std.iyte.edu.tr",
                            FirstName = "Merve",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "merve.dogan.s25"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000026"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ahmet.arslan.s26@std.iyte.edu.tr",
                            FirstName = "Ahmet",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ahmet.arslan.s26"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000027"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "selin.ozturk.s27@std.iyte.edu.tr",
                            FirstName = "Selin",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "selin.ozturk.s27"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000028"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "can.celik.s28@std.iyte.edu.tr",
                            FirstName = "Can",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "can.celik.s28"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000029"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "gamze.yildiz.s29@std.iyte.edu.tr",
                            FirstName = "Gamze",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "gamze.yildiz.s29"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000030"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "murat.demir.s30@std.iyte.edu.tr",
                            FirstName = "Murat",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "murat.demir.s30"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000031"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "elif.ozturk.s31@std.iyte.edu.tr",
                            FirstName = "Elif",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "elif.ozturk.s31"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000032"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mustafa.celik.s32@std.iyte.edu.tr",
                            FirstName = "Mustafa",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "mustafa.celik.s32"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000033"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "gamze.ozturk.s33@std.iyte.edu.tr",
                            FirstName = "Gamze",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "gamze.ozturk.s33"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000034"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.demir.s34@std.iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ali.demir.s34"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000035"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hatice.celik.s35@std.iyte.edu.tr",
                            FirstName = "Hatice",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "hatice.celik.s35"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000036"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.celik.s36@std.iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ali.celik.s36"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000037"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "merve.celik.s37@std.iyte.edu.tr",
                            FirstName = "Merve",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "merve.celik.s37"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000038"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emre.aydin.s38@std.iyte.edu.tr",
                            FirstName = "Emre",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "emre.aydin.s38"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000039"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.arslan.s39@std.iyte.edu.tr",
                            FirstName = "Fatma",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "fatma.arslan.s39"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000040"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.yildiz.s40@std.iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = false,
                            IsEmailVerified = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "veli.yildiz.s40"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000041"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ayse.yilmaz.p1@iyte.edu.tr",
                            FirstName = "Ayşe",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Yılmaz",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ayse.yilmaz.p1"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000042"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mehmet.kaya.p2@iyte.edu.tr",
                            FirstName = "Mehmet",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Kaya",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "mehmet.kaya.p2"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000043"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "zeynep.demir.p3@iyte.edu.tr",
                            FirstName = "Zeynep",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Demir",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "zeynep.demir.p3"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000044"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ahmet.celik.p4@iyte.edu.tr",
                            FirstName = "Ahmet",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ahmet.celik.p4"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000045"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mustafa.sahin.p5@iyte.edu.tr",
                            FirstName = "Mustafa",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Şahin",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "mustafa.sahin.p5"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000046"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "fatma.ozturk.p6@iyte.edu.tr",
                            FirstName = "Fatma",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "fatma.ozturk.p6"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000047"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ali.yildiz.p7@iyte.edu.tr",
                            FirstName = "Ali",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "ali.yildiz.p7"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000048"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "huseyin.aydin.p8@iyte.edu.tr",
                            FirstName = "Hüseyin",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "huseyin.aydin.p8"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000049"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "elif.arslan.p9@iyte.edu.tr",
                            FirstName = "Elif",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "elif.arslan.p9"
                        },
                        new
                        {
                            Id = new Guid("40000000-0000-0000-0000-000000000050"),
                            AuthenticatorType = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "veli.dogan.p10@iyte.edu.tr",
                            FirstName = "Veli",
                            IsActive = true,
                            IsEmailVerified = true,
                            LastName = "Doğan",
                            PasswordHash = new byte[] { 136, 200, 208, 34, 27, 98, 120, 207, 137, 231, 180, 88, 76, 107, 74, 134, 96, 238, 91, 209, 180, 212, 186, 15, 32, 106, 10, 63, 83, 77, 145, 93, 69, 211, 117, 78, 76, 178, 253, 236, 212, 172, 217, 50, 89, 243, 117, 129, 55, 177, 225, 113, 128, 135, 53, 30, 98, 62, 184, 140, 113, 246, 245, 9, 246, 26, 170, 201, 253, 62, 105, 193, 2, 63, 74, 249, 108, 196, 187, 131, 226, 203, 164, 161, 246, 255, 150, 42, 209, 157, 137, 227, 97, 120, 139, 9, 6, 145, 79, 98, 156, 22, 104, 88, 50, 78, 246, 242, 160, 75, 204, 252, 252, 235, 98, 104, 156, 50, 110, 102, 179, 99, 48, 244, 133, 138, 230, 232 },
                            PasswordSalt = new byte[] { 79, 123, 167, 226, 176, 119, 29, 119, 218, 38, 228, 252, 240, 15, 123, 106, 254, 154, 178, 204, 166, 136, 205, 253, 75, 215, 15, 220, 143, 13, 159, 150, 241, 53, 234, 209, 150, 67, 163, 119, 216, 134, 191, 134, 215, 128, 94, 186, 91, 87, 79, 51, 19, 89, 178, 222, 185, 230, 69, 228, 192, 185, 86, 252 },
                            UserName = "veli.dogan.p10"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("OperationClaimId")
                        .HasColumnType("uuid")
                        .HasColumnName("OperationClaimId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000001"),
                            UserId = new Guid("11111111-1111-1111-1111-11111111111a")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("22222222-2222-2222-2222-22222222222a")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("33333333-3333-3333-3333-33333333333a")
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("44444444-4444-4444-4444-44444444444a")
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000005"),
                            UserId = new Guid("55555555-5555-5555-5555-55555555555a")
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000006"),
                            UserId = new Guid("66666666-6666-6666-6666-66666666666a")
                        },
                        new
                        {
                            Id = new Guid("43079861-4acb-4bf9-bac1-98b67a96bd98"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1260),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("6c88a122-439f-473b-92ea-dda9a3ca2b0c"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1270),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("a9d51763-4007-465b-b2a8-cd99a8c219f5"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1270),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("0aef782a-212f-4880-9f7c-e394483a1891"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1280),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("4d97eaaa-ffd9-4f76-b1b3-8bb60385d3c3"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1280),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("308e74c2-3a92-4a3d-ad99-b6a353bc3193"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1280),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("c49e4a6d-1f5d-4d09-abe6-f7090a6e8c0c"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1290),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            Id = new Guid("4b8f9331-36da-4daa-90fa-9bc70b6f3a13"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1290),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000008")
                        },
                        new
                        {
                            Id = new Guid("e3a52061-57e6-487b-be12-e5d40d313cf1"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1300),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000009")
                        },
                        new
                        {
                            Id = new Guid("89a675fe-baf0-458c-a7f3-971d8841f86b"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1300),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000010")
                        },
                        new
                        {
                            Id = new Guid("d02b19ce-21bd-414c-af6c-59ad4241f503"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1300),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000011")
                        },
                        new
                        {
                            Id = new Guid("b4afb151-4bcd-4860-894d-523a4caa65d7"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1310),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000012")
                        },
                        new
                        {
                            Id = new Guid("59cff48c-b703-4dbc-9210-8b1801baf76e"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1310),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000013")
                        },
                        new
                        {
                            Id = new Guid("c3c70585-9dba-468c-bebc-97021fd3e3ad"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1320),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000014")
                        },
                        new
                        {
                            Id = new Guid("c827babd-a3a2-4f44-9b98-0526a1100d9c"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1320),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000015")
                        },
                        new
                        {
                            Id = new Guid("1371e713-1e37-44f9-86a9-35be0fe256a1"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1330),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000016")
                        },
                        new
                        {
                            Id = new Guid("483f4b01-6391-456d-975b-472d910e7d56"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1330),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000017")
                        },
                        new
                        {
                            Id = new Guid("13df70f9-4a5a-495e-a9a2-c3cc429041b5"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1330),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000018")
                        },
                        new
                        {
                            Id = new Guid("77f4cc1f-ff26-4cfd-8ffe-6784e34c052f"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1340),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000019")
                        },
                        new
                        {
                            Id = new Guid("35ce5818-f2b9-4538-b91c-6dca8033bf56"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1340),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000020")
                        },
                        new
                        {
                            Id = new Guid("50b7f8c8-a66d-4e14-8ea6-fe89684e7f6a"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1350),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000021")
                        },
                        new
                        {
                            Id = new Guid("505fae94-5ab0-4034-bdc6-a53a1f5e9576"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1350),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000022")
                        },
                        new
                        {
                            Id = new Guid("47d31d97-81e3-4d67-b584-83c28497641c"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1350),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000023")
                        },
                        new
                        {
                            Id = new Guid("2664ac79-a25d-436e-96ff-5f7677cf3f87"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1360),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000024")
                        },
                        new
                        {
                            Id = new Guid("63a4f5ff-e02f-440d-9908-b0c8b7dcf78a"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1360),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000025")
                        },
                        new
                        {
                            Id = new Guid("efc08299-efd8-4593-baaf-b844435de7c6"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1370),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000026")
                        },
                        new
                        {
                            Id = new Guid("293bf890-19b9-41a3-8a2a-d4921ffe5b3e"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1370),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000027")
                        },
                        new
                        {
                            Id = new Guid("050d01d2-00e5-4709-b552-66fc316968ce"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1370),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000028")
                        },
                        new
                        {
                            Id = new Guid("d06914d2-b6ca-4002-b0d2-a6d195053404"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1380),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000029")
                        },
                        new
                        {
                            Id = new Guid("cd1d6e86-4ea9-43dc-a3ad-c63e3c8f45e2"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1380),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000030")
                        },
                        new
                        {
                            Id = new Guid("11f59b39-3492-4778-a7a4-963926b3174c"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1390),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000031")
                        },
                        new
                        {
                            Id = new Guid("d4f7ebca-43ee-4d0e-b34b-0773f8364525"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1390),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000032")
                        },
                        new
                        {
                            Id = new Guid("e3d110bd-1951-4db3-a201-c6e2fabe9d8c"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1390),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000033")
                        },
                        new
                        {
                            Id = new Guid("7c031eb6-8513-4798-8ab6-3dbd7125401d"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1400),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000034")
                        },
                        new
                        {
                            Id = new Guid("6c57f9b1-3874-424b-a751-ed6fad656917"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1400),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000035")
                        },
                        new
                        {
                            Id = new Guid("45f6b574-1ea3-4350-b6f5-b3b7ab6c68a6"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1400),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000036")
                        },
                        new
                        {
                            Id = new Guid("bfdf011d-2e12-4e6a-960a-cf2b0e4e0685"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1410),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000037")
                        },
                        new
                        {
                            Id = new Guid("2faaf5fa-c30b-4a46-9f62-c55b48502c05"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1410),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000038")
                        },
                        new
                        {
                            Id = new Guid("e74ba1d6-5eea-424c-a1b1-d46e4c8cfde7"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1420),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000039")
                        },
                        new
                        {
                            Id = new Guid("27381cdc-f3fc-4683-9f8d-aaac6e7359d3"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1420),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000002"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000040")
                        },
                        new
                        {
                            Id = new Guid("58755760-5c7c-425d-9743-f339fa06bb71"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1420),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000041")
                        },
                        new
                        {
                            Id = new Guid("f1b9d626-4b04-4037-a804-3541cccbc39f"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1430),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000042")
                        },
                        new
                        {
                            Id = new Guid("d7cb460d-a330-4cff-b338-9cfb1f47c63f"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1430),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000005"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000043")
                        },
                        new
                        {
                            Id = new Guid("1406423d-2788-4d18-8a46-bab6e39a0341"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1430),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000006"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000044")
                        },
                        new
                        {
                            Id = new Guid("f92f4643-b5ae-450e-b09c-73660d807260"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1440),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000045")
                        },
                        new
                        {
                            Id = new Guid("c5e16f3b-2edb-4872-88b3-009fac97a259"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1440),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000046")
                        },
                        new
                        {
                            Id = new Guid("81c8e5a5-e00c-4488-96c5-54e866cd7601"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1440),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000047")
                        },
                        new
                        {
                            Id = new Guid("7d9e66ab-ea84-4469-85a7-40c93bdb54cb"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1450),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000048")
                        },
                        new
                        {
                            Id = new Guid("cee75c8c-c381-4bea-9495-04087850c8e7"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1450),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000003"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000049")
                        },
                        new
                        {
                            Id = new Guid("bd2d581c-13ad-4600-9c40-b9c00a6e1394"),
                            CreatedDate = new DateTime(2025, 5, 19, 20, 25, 13, 39, DateTimeKind.Utc).AddTicks(1450),
                            OperationClaimId = new Guid("00000000-0000-0000-0000-000000000004"),
                            UserId = new Guid("40000000-0000-0000-0000-000000000050")
                        });
                });

            modelBuilder.Entity("Domain.Entities.ValidationCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpireDate");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("IsUsed");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("UserId");

                    b.Property<int>("ValidationType")
                        .HasColumnType("integer")
                        .HasColumnName("ValidationType");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ValidationCodes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.CourseTaken", b =>
                {
                    b.HasOne("Domain.Entities.Course", "MatchedCourse")
                        .WithMany("CourseTakens")
                        .HasForeignKey("MatchedCourseId");

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MatchedCourse");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.HasOne("Domain.Entities.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Domain.Entities.EligibilityCheckResult", b =>
                {
                    b.HasOne("Domain.Entities.GraduationProcess", "GraduationProcess")
                        .WithMany("EligibilityCheckResults")
                        .HasForeignKey("GraduationProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GraduationProcess");
                });

            modelBuilder.Entity("Domain.Entities.EmailAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.FileAttachment", b =>
                {
                    b.HasOne("Domain.Entities.GraduationProcess", "GraduationProcess")
                        .WithMany("FileAttachments")
                        .HasForeignKey("GraduationProcessId");

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.HasOne("Domain.Entities.TranscriptData", "TranscriptData")
                        .WithMany()
                        .HasForeignKey("TranscriptDataId");

                    b.HasOne("Domain.Entities.User", "UploaderUser")
                        .WithMany()
                        .HasForeignKey("UploaderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GraduationProcess");

                    b.Navigation("StudentUser");

                    b.Navigation("TranscriptData");

                    b.Navigation("UploaderUser");
                });

            modelBuilder.Entity("Domain.Entities.GraduationProcess", b =>
                {
                    b.HasOne("Domain.Entities.User", "AdvisorUser")
                        .WithMany()
                        .HasForeignKey("AdvisorUserId");

                    b.HasOne("Domain.Entities.User", "DeansOfficeUser")
                        .WithMany()
                        .HasForeignKey("DeansOfficeUserId");

                    b.HasOne("Domain.Entities.User", "DeptSecretaryUser")
                        .WithMany()
                        .HasForeignKey("DeptSecretaryUserId");

                    b.HasOne("Domain.Entities.User", "StudentAffairsUser")
                        .WithMany()
                        .HasForeignKey("StudentAffairsUserId");

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvisorUser");

                    b.Navigation("DeansOfficeUser");

                    b.Navigation("DeptSecretaryUser");

                    b.Navigation("StudentAffairsUser");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.GraduationRequirementSet", b =>
                {
                    b.HasOne("Domain.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithOne("GraduationRequirementSet")
                        .HasForeignKey("Domain.Entities.GraduationRequirementSet", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Department");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.HasOne("Domain.Entities.User", "RecipientUser")
                        .WithMany()
                        .HasForeignKey("RecipientUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GraduationProcess", "RelatedProcess")
                        .WithMany("Notifications")
                        .HasForeignKey("RelatedProcessId");

                    b.Navigation("RecipientUser");

                    b.Navigation("RelatedProcess");
                });

            modelBuilder.Entity("Domain.Entities.OtpAuthenticator", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RankingList", b =>
                {
                    b.HasOne("Domain.Entities.User", "GeneratedByUser")
                        .WithMany()
                        .HasForeignKey("GeneratedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Department", "ScopeDepartment")
                        .WithMany()
                        .HasForeignKey("ScopeDepartmentId");

                    b.HasOne("Domain.Entities.Faculty", "ScopeFaculty")
                        .WithMany()
                        .HasForeignKey("ScopeFacultyId");

                    b.Navigation("GeneratedByUser");

                    b.Navigation("ScopeDepartment");

                    b.Navigation("ScopeFaculty");
                });

            modelBuilder.Entity("Domain.Entities.RankingListCriteria", b =>
                {
                    b.HasOne("Domain.Entities.RankingList", "RankingList")
                        .WithMany("Criteria")
                        .HasForeignKey("RankingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RankingList");
                });

            modelBuilder.Entity("Domain.Entities.RankingListEntry", b =>
                {
                    b.HasOne("Domain.Entities.RankingList", "RankingList")
                        .WithMany("Entries")
                        .HasForeignKey("RankingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RankingList");

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RequirementMandatoryCourse", b =>
                {
                    b.HasOne("Domain.Entities.Course", "Course")
                        .WithMany("RequirementMandatoryCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GraduationRequirementSet", "GraduationRequirementSet")
                        .WithMany("MandatoryCourses")
                        .HasForeignKey("GraduationRequirementSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("GraduationRequirementSet");
                });

            modelBuilder.Entity("Domain.Entities.Staff", b =>
                {
                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("StaffMembers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Domain.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("StaffProfile")
                        .HasForeignKey("Domain.Entities.Staff", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Faculty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.HasOne("Domain.Entities.User", "AssignedAdvisor")
                        .WithMany()
                        .HasForeignKey("AssignedAdvisorUserId");

                    b.HasOne("Domain.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("StudentProfile")
                        .HasForeignKey("Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedAdvisor");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.TranscriptData", b =>
                {
                    b.HasOne("Domain.Entities.User", "StudentUser")
                        .WithMany()
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentUser");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.ValidationCode", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Navigation("CourseTakens");

                    b.Navigation("RequirementMandatoryCourses");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Navigation("GraduationRequirementSet");

                    b.Navigation("StaffMembers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Domain.Entities.Faculty", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Domain.Entities.GraduationProcess", b =>
                {
                    b.Navigation("EligibilityCheckResults");

                    b.Navigation("FileAttachments");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.GraduationRequirementSet", b =>
                {
                    b.Navigation("MandatoryCourses");
                });

            modelBuilder.Entity("Domain.Entities.RankingList", b =>
                {
                    b.Navigation("Criteria");

                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("StaffProfile");

                    b.Navigation("StudentProfile");

                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
